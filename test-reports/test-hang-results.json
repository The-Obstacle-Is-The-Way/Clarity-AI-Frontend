{"numTotalTestSuites":330,"numPassedTestSuites":326,"numFailedTestSuites":4,"numPendingTestSuites":0,"numTotalTests":619,"numPassedTests":600,"numFailedTests":19,"numPendingTests":0,"numTodoTests":0,"startTime":1743717596100,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","App"],"fullName":" App renders with neural precision","status":"passed","title":"renders with neural precision","duration":13,"failureMessages":[]},{"ancestorTitles":["","App"],"fullName":" App responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":9,"failureMessages":[]}],"startTime":1743717602217,"endTime":1743717602239,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/App.test.tsx"},{"assertionResults":[{"ancestorTitles":["","index"],"fullName":" index renders with neural precision","status":"skipped","title":"renders with neural precision","failureMessages":[]},{"ancestorTitles":["","index"],"fullName":" index responds to user interaction with quantum precision","status":"skipped","title":"responds to user interaction with quantum precision","failureMessages":[]}],"startTime":1743717596100,"endTime":1743717596100,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/index.test.tsx"},{"assertionResults":[{"ancestorTitles":["","main"],"fullName":" main renders with neural precision","status":"passed","title":"renders with neural precision","duration":8,"failureMessages":[]},{"ancestorTitles":["","main"],"fullName":" main responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":2,"failureMessages":[]}],"startTime":1743717605919,"endTime":1743717605929,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/main.test.tsx"},{"assertionResults":[{"ancestorTitles":["","Vite Environment Types"],"fullName":" Vite Environment Types verifies Vite types with clinical precision","status":"passed","title":"verifies Vite types with clinical precision","duration":2,"failureMessages":[]},{"ancestorTitles":["","Vite Environment Types"],"fullName":" Vite Environment Types maintains neural precision with custom environment variables","status":"passed","title":"maintains neural precision with custom environment variables","duration":1,"failureMessages":[]}],"startTime":1743717602894,"endTime":1743717602897,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/vite-env.d.test.ts"},{"assertionResults":[{"ancestorTitles":["","initializeApp"],"fullName":" initializeApp should be tested properly","status":"skipped","title":"should be tested properly","failureMessages":[]}],"startTime":1743717596100,"endTime":1743717596100,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/app/initializeApp.test.ts"},{"assertionResults":[{"ancestorTitles":["","useBlockingTransition"],"fullName":" useBlockingTransition should initialize with the provided initial state and isPending as false","status":"passed","title":"should initialize with the provided initial state and isPending as false","duration":8,"failureMessages":[]},{"ancestorTitles":["","useBlockingTransition"],"fullName":" useBlockingTransition should update state correctly using the transition setter","status":"passed","title":"should update state correctly using the transition setter","duration":3,"failureMessages":[]},{"ancestorTitles":["","useBlockingTransition"],"fullName":" useBlockingTransition should handle functional updates in the transition setter","status":"passed","title":"should handle functional updates in the transition setter","duration":6,"failureMessages":[]}],"startTime":1743717601462,"endTime":1743717601479,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/hooks/useBlockingTransition.test.ts"},{"assertionResults":[{"ancestorTitles":["","Login"],"fullName":" Login renders with neural precision","status":"passed","title":"renders with neural precision","duration":45,"failureMessages":[]},{"ancestorTitles":["","Login"],"fullName":" Login responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":7,"failureMessages":[]},{"ancestorTitles":["","Login"],"fullName":" Login handles form submission","status":"passed","title":"handles form submission","duration":4,"failureMessages":[]}],"startTime":1743717601316,"endTime":1743717601372,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/pages/Login.test.tsx"},{"assertionResults":[{"ancestorTitles":["","NotFound"],"fullName":" NotFound renders with neural precision","status":"passed","title":"renders with neural precision","duration":22,"failureMessages":[]},{"ancestorTitles":["","NotFound"],"fullName":" NotFound responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":5,"failureMessages":[]}],"startTime":1743717603991,"endTime":1743717604018,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/pages/NotFound.test.tsx"},{"assertionResults":[{"ancestorTitles":["","PatientProfile"],"fullName":" PatientProfile renders with neural precision","status":"passed","title":"renders with neural precision","duration":20,"failureMessages":[]},{"ancestorTitles":["","PatientProfile"],"fullName":" PatientProfile responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":8,"failureMessages":[]}],"startTime":1743717605015,"endTime":1743717605043,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/pages/PatientProfile.test.tsx"},{"assertionResults":[{"ancestorTitles":["","AuditLogService Runtime Validation","isAuditEventType"],"fullName":" AuditLogService Runtime Validation isAuditEventType should return true for valid AuditEventType values","status":"passed","title":"should return true for valid AuditEventType values","duration":1,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isAuditEventType"],"fullName":" AuditLogService Runtime Validation isAuditEventType should return false for invalid string values","status":"passed","title":"should return false for invalid string values","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isAuditEventType"],"fullName":" AuditLogService Runtime Validation isAuditEventType should return false for non-string values","status":"passed","title":"should return false for non-string values","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isPartialAuditLogEventData"],"fullName":" AuditLogService Runtime Validation isPartialAuditLogEventData should return true for valid partial data","status":"passed","title":"should return true for valid partial data","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isPartialAuditLogEventData"],"fullName":" AuditLogService Runtime Validation isPartialAuditLogEventData should return true for empty object","status":"passed","title":"should return true for empty object","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isPartialAuditLogEventData"],"fullName":" AuditLogService Runtime Validation isPartialAuditLogEventData should return false for data with incorrect types","status":"passed","title":"should return false for data with incorrect types","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isPartialAuditLogEventData"],"fullName":" AuditLogService Runtime Validation isPartialAuditLogEventData should return false for non-object","status":"passed","title":"should return false for non-object","duration":1,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isAuditLogEvent"],"fullName":" AuditLogService Runtime Validation isAuditLogEvent should return true for valid AuditLogEvent","status":"passed","title":"should return true for valid AuditLogEvent","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isAuditLogEvent"],"fullName":" AuditLogService Runtime Validation isAuditLogEvent should return false for event missing required fields","status":"passed","title":"should return false for event missing required fields","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isAuditLogEvent"],"fullName":" AuditLogService Runtime Validation isAuditLogEvent should return false for event with incorrect types","status":"passed","title":"should return false for event with incorrect types","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","isAuditLogEvent"],"fullName":" AuditLogService Runtime Validation isAuditLogEvent should return false for null","status":"passed","title":"should return false for null","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","validateLogEventData"],"fullName":" AuditLogService Runtime Validation validateLogEventData should return Ok for valid partial data","status":"passed","title":"should return Ok for valid partial data","duration":1,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","validateLogEventData"],"fullName":" AuditLogService Runtime Validation validateLogEventData should return Err for invalid partial data","status":"passed","title":"should return Err for invalid partial data","duration":1,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","validateAuditEvent"],"fullName":" AuditLogService Runtime Validation validateAuditEvent should return Ok for valid full event","status":"passed","title":"should return Ok for valid full event","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","validateAuditEvent"],"fullName":" AuditLogService Runtime Validation validateAuditEvent should return Err for invalid event (missing field)","status":"passed","title":"should return Err for invalid event (missing field)","duration":0,"failureMessages":[]},{"ancestorTitles":["","AuditLogService Runtime Validation","validateAuditEvent"],"fullName":" AuditLogService Runtime Validation validateAuditEvent should return Err for invalid event (wrong type)","status":"passed","title":"should return Err for invalid event (wrong type)","duration":1,"failureMessages":[]}],"startTime":1743717599107,"endTime":1743717599113,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/services/AuditLogService.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","useAuditLogPHIView"],"fullName":" useAuditLogPHIView processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":10,"failureMessages":[]},{"ancestorTitles":["","useAuditLogPHIView"],"fullName":" useAuditLogPHIView handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":2,"failureMessages":[]}],"startTime":1743717600297,"endTime":1743717600309,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/services/AuditLogService.test.ts"},{"assertionResults":[{"ancestorTitles":["","SessionService Runtime Validation","isSessionOptions"],"fullName":" SessionService Runtime Validation isSessionOptions should return true for valid full SessionOptions","status":"passed","title":"should return true for valid full SessionOptions","duration":1,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","isSessionOptions"],"fullName":" SessionService Runtime Validation isSessionOptions should return true for valid partial SessionOptions","status":"passed","title":"should return true for valid partial SessionOptions","duration":0,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","isSessionOptions"],"fullName":" SessionService Runtime Validation isSessionOptions should return true for empty object","status":"passed","title":"should return true for empty object","duration":0,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","isSessionOptions"],"fullName":" SessionService Runtime Validation isSessionOptions should return false for options with incorrect types","status":"passed","title":"should return false for options with incorrect types","duration":1,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","isSessionOptions"],"fullName":" SessionService Runtime Validation isSessionOptions should return false for options with bad values (warning >= timeout)","status":"passed","title":"should return false for options with bad values (warning >= timeout)","duration":0,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","isSessionOptions"],"fullName":" SessionService Runtime Validation isSessionOptions should return false for options with non-function callback","status":"passed","title":"should return false for options with non-function callback","duration":0,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","isSessionOptions"],"fullName":" SessionService Runtime Validation isSessionOptions should return false for null","status":"passed","title":"should return false for null","duration":0,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","isSessionOptions"],"fullName":" SessionService Runtime Validation isSessionOptions should return false for non-object","status":"passed","title":"should return false for non-object","duration":0,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","validateSessionOptions"],"fullName":" SessionService Runtime Validation validateSessionOptions should return Ok for valid SessionOptions","status":"passed","title":"should return Ok for valid SessionOptions","duration":0,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","validateSessionOptions"],"fullName":" SessionService Runtime Validation validateSessionOptions should return Ok for valid partial SessionOptions","status":"passed","title":"should return Ok for valid partial SessionOptions","duration":0,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","validateSessionOptions"],"fullName":" SessionService Runtime Validation validateSessionOptions should return Ok for empty object","status":"passed","title":"should return Ok for empty object","duration":1,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","validateSessionOptions"],"fullName":" SessionService Runtime Validation validateSessionOptions should return Err for invalid options (wrong type)","status":"passed","title":"should return Err for invalid options (wrong type)","duration":1,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","validateSessionOptions"],"fullName":" SessionService Runtime Validation validateSessionOptions should return Ok for options with warningTime >= timeout (guard only warns)","status":"passed","title":"should return Ok for options with warningTime >= timeout (guard only warns)","duration":12,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","validateSessionOptions"],"fullName":" SessionService Runtime Validation validateSessionOptions should return Err for invalid options (bad callback)","status":"passed","title":"should return Err for invalid options (bad callback)","duration":7,"failureMessages":[]},{"ancestorTitles":["","SessionService Runtime Validation","validateSessionOptions"],"fullName":" SessionService Runtime Validation validateSessionOptions should return Err for non-object input","status":"passed","title":"should return Err for non-object input","duration":0,"failureMessages":[]}],"startTime":1743717599294,"endTime":1743717599318,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/services/SessionService.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","initializeSessionService"],"fullName":" initializeSessionService processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","initializeSessionService"],"fullName":" initializeSessionService handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717605808,"endTime":1743717605809,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/services/SessionService.test.ts"},{"assertionResults":[{"ancestorTitles":["","apiClient"],"fullName":" apiClient processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":0,"failureMessages":[]},{"ancestorTitles":["","apiClient"],"fullName":" apiClient handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":1,"failureMessages":[]}],"startTime":1743717606369,"endTime":1743717606370,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/services/apiClient.test.ts"},{"assertionResults":[{"ancestorTitles":["","createNeuralGlowUniforms"],"fullName":" createNeuralGlowUniforms processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","createNeuralGlowUniforms"],"fullName":" createNeuralGlowUniforms handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717606011,"endTime":1743717606012,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/shaders/neuralGlow.test.ts"},{"assertionResults":[{"ancestorTitles":["","brain"],"fullName":" brain processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","brain"],"fullName":" brain handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717603758,"endTime":1743717603759,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/types/brain.test.ts"},{"assertionResults":[{"ancestorTitles":["","isValidTheme"],"fullName":" isValidTheme processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","isValidTheme"],"fullName":" isValidTheme handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717606346,"endTime":1743717606347,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/types/theme.test.ts"},{"assertionResults":[{"ancestorTitles":["","Three.js Type Extensions"],"fullName":" Three.js Type Extensions verifies custom Three.js type extensions with mathematical precision","status":"passed","title":"verifies custom Three.js type extensions with mathematical precision","duration":0,"failureMessages":[]},{"ancestorTitles":["","Three.js Type Extensions"],"fullName":" Three.js Type Extensions maintains clinical precision with Vector3 operations","status":"passed","title":"maintains clinical precision with Vector3 operations","duration":1,"failureMessages":[]}],"startTime":1743717602977,"endTime":1743717602978,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/types/three-extensions.d.test.ts"},{"assertionResults":[{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateBrainModelData"],"fullName":" brainDataTransformer Runtime Validation validateBrainModelData should return Ok for valid BrainModel data","status":"passed","title":"should return Ok for valid BrainModel data","duration":2,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateBrainModelData"],"fullName":" brainDataTransformer Runtime Validation validateBrainModelData should return Err for data missing regions","status":"passed","title":"should return Err for data missing regions","duration":1,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateBrainModelData"],"fullName":" brainDataTransformer Runtime Validation validateBrainModelData should return Err for data with invalid connections array","status":"passed","title":"should return Err for data with invalid connections array","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateBrainModelData"],"fullName":" brainDataTransformer Runtime Validation validateBrainModelData should return Err for non-object input","status":"passed","title":"should return Err for non-object input","duration":1,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateBrainRegionArray"],"fullName":" brainDataTransformer Runtime Validation validateBrainRegionArray should return Ok for valid BrainRegion array","status":"passed","title":"should return Ok for valid BrainRegion array","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateBrainRegionArray"],"fullName":" brainDataTransformer Runtime Validation validateBrainRegionArray should return Ok for empty array","status":"passed","title":"should return Ok for empty array","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateBrainRegionArray"],"fullName":" brainDataTransformer Runtime Validation validateBrainRegionArray should return Err for array with invalid BrainRegion objects","status":"passed","title":"should return Err for array with invalid BrainRegion objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateBrainRegionArray"],"fullName":" brainDataTransformer Runtime Validation validateBrainRegionArray should return Err for non-array input","status":"passed","title":"should return Err for non-array input","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateRenderMode"],"fullName":" brainDataTransformer Runtime Validation validateRenderMode should return Ok for valid RenderMode values","status":"passed","title":"should return Ok for valid RenderMode values","duration":1,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateRenderMode"],"fullName":" brainDataTransformer Runtime Validation validateRenderMode should return Err for invalid string values","status":"passed","title":"should return Err for invalid string values","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateRenderMode"],"fullName":" brainDataTransformer Runtime Validation validateRenderMode should return Err for non-string input","status":"passed","title":"should return Err for non-string input","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateThemeSettings"],"fullName":" brainDataTransformer Runtime Validation validateThemeSettings should return Ok for valid ThemeSettings object","status":"passed","title":"should return Ok for valid ThemeSettings object","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateThemeSettings"],"fullName":" brainDataTransformer Runtime Validation validateThemeSettings should return Err for invalid ThemeSettings object (wrong type)","status":"passed","title":"should return Err for invalid ThemeSettings object (wrong type)","duration":1,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","validateThemeSettings"],"fullName":" brainDataTransformer Runtime Validation validateThemeSettings should return Err for non-object input","status":"passed","title":"should return Err for non-object input","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","isThemeSettings"],"fullName":" brainDataTransformer Runtime Validation isThemeSettings should return true for valid theme settings","status":"passed","title":"should return true for valid theme settings","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","isThemeSettings"],"fullName":" brainDataTransformer Runtime Validation isThemeSettings should return false for object missing properties","status":"passed","title":"should return false for object missing properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","brainDataTransformer Runtime Validation","isThemeSettings"],"fullName":" brainDataTransformer Runtime Validation isThemeSettings should return false for object with wrong property type","status":"passed","title":"should return false for object with wrong property type","duration":0,"failureMessages":[]}],"startTime":1743717598497,"endTime":1743717598505,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/utils/brainDataTransformer.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","transformBrainData"],"fullName":" transformBrainData processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":2,"failureMessages":[]},{"ancestorTitles":["","transformBrainData"],"fullName":" transformBrainData handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717606311,"endTime":1743717606313,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/utils/brainDataTransformer.test.ts"},{"assertionResults":[{"ancestorTitles":["","debounce"],"fullName":" debounce processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":0,"failureMessages":[]},{"ancestorTitles":["","debounce"],"fullName":" debounce handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717606421,"endTime":1743717606421,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/utils/performanceUtils.test.ts"},{"assertionResults":[{"ancestorTitles":["","progressiveLoader Runtime Validation","validateBrainModelData"],"fullName":" progressiveLoader Runtime Validation validateBrainModelData should return Ok for valid BrainModel data","status":"passed","title":"should return Ok for valid BrainModel data","duration":1,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateBrainModelData"],"fullName":" progressiveLoader Runtime Validation validateBrainModelData should return Err for invalid data","status":"passed","title":"should return Err for invalid data","duration":2,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateBrainRegionArray"],"fullName":" progressiveLoader Runtime Validation validateBrainRegionArray should return Ok for valid BrainRegion array","status":"passed","title":"should return Ok for valid BrainRegion array","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateBrainRegionArray"],"fullName":" progressiveLoader Runtime Validation validateBrainRegionArray should return Ok for empty array","status":"passed","title":"should return Ok for empty array","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateBrainRegionArray"],"fullName":" progressiveLoader Runtime Validation validateBrainRegionArray should return Err for array with invalid BrainRegion objects","status":"passed","title":"should return Err for array with invalid BrainRegion objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateBrainRegionArray"],"fullName":" progressiveLoader Runtime Validation validateBrainRegionArray should return Err for non-array input","status":"passed","title":"should return Err for non-array input","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateNeuralConnectionArray"],"fullName":" progressiveLoader Runtime Validation validateNeuralConnectionArray should return Ok for valid NeuralConnection array","status":"passed","title":"should return Ok for valid NeuralConnection array","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateNeuralConnectionArray"],"fullName":" progressiveLoader Runtime Validation validateNeuralConnectionArray should return Ok for empty array","status":"passed","title":"should return Ok for empty array","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateNeuralConnectionArray"],"fullName":" progressiveLoader Runtime Validation validateNeuralConnectionArray should return Err for array with invalid NeuralConnection objects","status":"passed","title":"should return Err for array with invalid NeuralConnection objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateNeuralConnectionArray"],"fullName":" progressiveLoader Runtime Validation validateNeuralConnectionArray should return Err for non-array input","status":"passed","title":"should return Err for non-array input","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateProgressCallback"],"fullName":" progressiveLoader Runtime Validation validateProgressCallback should return Ok for a valid function","status":"passed","title":"should return Ok for a valid function","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateProgressCallback"],"fullName":" progressiveLoader Runtime Validation validateProgressCallback should return Ok for undefined","status":"passed","title":"should return Ok for undefined","duration":0,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateProgressCallback"],"fullName":" progressiveLoader Runtime Validation validateProgressCallback should return Err for non-function/non-undefined input","status":"passed","title":"should return Err for non-function/non-undefined input","duration":2,"failureMessages":[]},{"ancestorTitles":["","progressiveLoader Runtime Validation","validateProgressCallback"],"fullName":" progressiveLoader Runtime Validation validateProgressCallback should return Err for null","status":"passed","title":"should return Err for null","duration":0,"failureMessages":[]}],"startTime":1743717599332,"endTime":1743717599339,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/utils/progressiveLoader.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","loadRegionsProgressively"],"fullName":" loadRegionsProgressively processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":2,"failureMessages":[]},{"ancestorTitles":["","loadRegionsProgressively"],"fullName":" loadRegionsProgressively handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":1,"failureMessages":[]}],"startTime":1743717605955,"endTime":1743717605958,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/utils/progressiveLoader.test.ts"},{"assertionResults":[{"ancestorTitles":["","themeSettings Object"],"fullName":" themeSettings Object contains expected theme configurations","status":"failed","title":"contains expected theme configurations","duration":16,"failureMessages":["expected undefined to be an instance of Object"],"location":{"line":20,"column":27}}],"startTime":1743717604804,"endTime":1743717604820,"status":"failed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/contexts/ThemeContext.test.tsx"},{"assertionResults":[{"ancestorTitles":["","useTheme"],"fullName":" useTheme initializes with correct default state","status":"passed","title":"initializes with correct default state","duration":39,"failureMessages":[]},{"ancestorTitles":["","useTheme"],"fullName":" useTheme handles state changes with mathematical precision","status":"passed","title":"handles state changes with mathematical precision","duration":2,"failureMessages":[]}],"startTime":1743717602162,"endTime":1743717602203,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/contexts/ThemeProviderComponent.test.tsx"},{"assertionResults":[{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validatePartialTemporalConfig"],"fullName":" TemporalDynamicsController Runtime Validation validatePartialTemporalConfig should return Ok for valid Partial<TemporalConfig>","status":"passed","title":"should return Ok for valid Partial<TemporalConfig>","duration":2,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validatePartialTemporalConfig"],"fullName":" TemporalDynamicsController Runtime Validation validatePartialTemporalConfig should return Ok for an empty object config","status":"passed","title":"should return Ok for an empty object config","duration":0,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validatePartialTemporalConfig"],"fullName":" TemporalDynamicsController Runtime Validation validatePartialTemporalConfig should return Err for non-object input","status":"passed","title":"should return Err for non-object input","duration":1,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validatePartialTemporalConfig"],"fullName":" TemporalDynamicsController Runtime Validation validatePartialTemporalConfig should return Err for config with incorrect field types","status":"passed","title":"should return Err for config with incorrect field types","duration":1,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validatePartialTemporalConfig"],"fullName":" TemporalDynamicsController Runtime Validation validatePartialTemporalConfig should return Err for config with out-of-range values","status":"passed","title":"should return Err for config with out-of-range values","duration":0,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validatePartialTemporalConfig"],"fullName":" TemporalDynamicsController Runtime Validation validatePartialTemporalConfig should return Err for config with invalid historyLength keys","status":"passed","title":"should return Err for config with invalid historyLength keys","duration":1,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validatePartialTemporalConfig"],"fullName":" TemporalDynamicsController Runtime Validation validatePartialTemporalConfig should return Err for config with invalid samplingRate values","status":"passed","title":"should return Err for config with invalid samplingRate values","duration":0,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validateTimeScale"],"fullName":" TemporalDynamicsController Runtime Validation validateTimeScale should return Ok for valid TimeScale values","status":"passed","title":"should return Ok for valid TimeScale values","duration":1,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validateTimeScale"],"fullName":" TemporalDynamicsController Runtime Validation validateTimeScale should return Err for invalid string values","status":"passed","title":"should return Err for invalid string values","duration":0,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validateTimeScale"],"fullName":" TemporalDynamicsController Runtime Validation validateTimeScale should return Err for non-string input","status":"passed","title":"should return Err for non-string input","duration":0,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validateMetricIds"],"fullName":" TemporalDynamicsController Runtime Validation validateMetricIds should return Ok for valid string array","status":"passed","title":"should return Ok for valid string array","duration":0,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validateMetricIds"],"fullName":" TemporalDynamicsController Runtime Validation validateMetricIds should return Ok for empty array","status":"passed","title":"should return Ok for empty array","duration":1,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validateMetricIds"],"fullName":" TemporalDynamicsController Runtime Validation validateMetricIds should return Err for non-array input","status":"passed","title":"should return Err for non-array input","duration":0,"failureMessages":[]},{"ancestorTitles":["","TemporalDynamicsController Runtime Validation","validateMetricIds"],"fullName":" TemporalDynamicsController Runtime Validation validateMetricIds should return Err for array with non-string elements","status":"passed","title":"should return Err for array with non-string elements","duration":2,"failureMessages":[]}],"startTime":1743717597658,"endTime":1743717597667,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/controllers/TemporalDynamicsController.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","useTemporalDynamicsController"],"fullName":" useTemporalDynamicsController processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":10,"failureMessages":[]},{"ancestorTitles":["","useTemporalDynamicsController"],"fullName":" useTemporalDynamicsController handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":2,"failureMessages":[]}],"startTime":1743717601124,"endTime":1743717601136,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/controllers/TemporalDynamicsController.test.ts"},{"assertionResults":[{"ancestorTitles":["","useClinicalContext Runtime Validation","validateRiskAssessment"],"fullName":" useClinicalContext Runtime Validation validateRiskAssessment should return Ok for valid RiskAssessment","status":"passed","title":"should return Ok for valid RiskAssessment","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateRiskAssessment"],"fullName":" useClinicalContext Runtime Validation validateRiskAssessment should return Err for invalid RiskAssessment (missing fields)","status":"passed","title":"should return Err for invalid RiskAssessment (missing fields)","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateRiskAssessment"],"fullName":" useClinicalContext Runtime Validation validateRiskAssessment should return Err for non-object input","status":"passed","title":"should return Err for non-object input","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateTreatmentResponsePredictionArray"],"fullName":" useClinicalContext Runtime Validation validateTreatmentResponsePredictionArray should return Ok for a valid array of TreatmentResponsePrediction","status":"passed","title":"should return Ok for a valid array of TreatmentResponsePrediction","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateTreatmentResponsePredictionArray"],"fullName":" useClinicalContext Runtime Validation validateTreatmentResponsePredictionArray should return Ok for an empty array","status":"passed","title":"should return Ok for an empty array","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateTreatmentResponsePredictionArray"],"fullName":" useClinicalContext Runtime Validation validateTreatmentResponsePredictionArray should return Err for non-array input","status":"passed","title":"should return Err for non-array input","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateTreatmentResponsePredictionArray"],"fullName":" useClinicalContext Runtime Validation validateTreatmentResponsePredictionArray should return Err for an array containing invalid items","status":"passed","title":"should return Err for an array containing invalid items","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateSymptomMappingArray"],"fullName":" useClinicalContext Runtime Validation validateSymptomMappingArray should return Ok for a valid array of SymptomNeuralMapping","status":"passed","title":"should return Ok for a valid array of SymptomNeuralMapping","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateSymptomMappingArray"],"fullName":" useClinicalContext Runtime Validation validateSymptomMappingArray should return Ok for an empty array","status":"passed","title":"should return Ok for an empty array","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateSymptomMappingArray"],"fullName":" useClinicalContext Runtime Validation validateSymptomMappingArray should return Err for non-array input","status":"passed","title":"should return Err for non-array input","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateSymptomMappingArray"],"fullName":" useClinicalContext Runtime Validation validateSymptomMappingArray should return Err for an array containing invalid items","status":"passed","title":"should return Err for an array containing invalid items","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateDiagnosisMappingArray"],"fullName":" useClinicalContext Runtime Validation validateDiagnosisMappingArray should return Ok for a valid array of DiagnosisNeuralMapping","status":"passed","title":"should return Ok for a valid array of DiagnosisNeuralMapping","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateDiagnosisMappingArray"],"fullName":" useClinicalContext Runtime Validation validateDiagnosisMappingArray should return Ok for an empty array","status":"passed","title":"should return Ok for an empty array","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateDiagnosisMappingArray"],"fullName":" useClinicalContext Runtime Validation validateDiagnosisMappingArray should return Err for non-array input","status":"passed","title":"should return Err for non-array input","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateDiagnosisMappingArray"],"fullName":" useClinicalContext Runtime Validation validateDiagnosisMappingArray should return Err for an array containing invalid items","status":"passed","title":"should return Err for an array containing invalid items","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateTreatmentMappingArray"],"fullName":" useClinicalContext Runtime Validation validateTreatmentMappingArray should return Ok for a valid array of TreatmentNeuralMapping","status":"passed","title":"should return Ok for a valid array of TreatmentNeuralMapping","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateTreatmentMappingArray"],"fullName":" useClinicalContext Runtime Validation validateTreatmentMappingArray should return Ok for an empty array","status":"passed","title":"should return Ok for an empty array","duration":1,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateTreatmentMappingArray"],"fullName":" useClinicalContext Runtime Validation validateTreatmentMappingArray should return Err for non-array input","status":"passed","title":"should return Err for non-array input","duration":0,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext Runtime Validation","validateTreatmentMappingArray"],"fullName":" useClinicalContext Runtime Validation validateTreatmentMappingArray should return Err for an array containing invalid items","status":"passed","title":"should return Err for an array containing invalid items","duration":1,"failureMessages":[]}],"startTime":1743717597668,"endTime":1743717597678,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/hooks/useClinicalContext.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","useClinicalContext"],"fullName":" useClinicalContext processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":2,"failureMessages":[]},{"ancestorTitles":["","useClinicalContext"],"fullName":" useClinicalContext handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":1,"failureMessages":[]}],"startTime":1743717601095,"endTime":1743717601098,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/hooks/useClinicalContext.test.ts"},{"assertionResults":[{"ancestorTitles":["","usePatientData Runtime Validation","validatePatientData"],"fullName":" usePatientData Runtime Validation validatePatientData should return Ok for a valid Patient object","status":"passed","title":"should return Ok for a valid Patient object","duration":1,"failureMessages":[]},{"ancestorTitles":["","usePatientData Runtime Validation","validatePatientData"],"fullName":" usePatientData Runtime Validation validatePatientData should return Err for non-object input","status":"passed","title":"should return Err for non-object input","duration":1,"failureMessages":[]},{"ancestorTitles":["","usePatientData Runtime Validation","validatePatientData"],"fullName":" usePatientData Runtime Validation validatePatientData should return Err for null input","status":"passed","title":"should return Err for null input","duration":0,"failureMessages":[]},{"ancestorTitles":["","usePatientData Runtime Validation","validatePatientData"],"fullName":" usePatientData Runtime Validation validatePatientData should return Err for an empty object","status":"passed","title":"should return Err for an empty object","duration":0,"failureMessages":[]},{"ancestorTitles":["","usePatientData Runtime Validation","validatePatientData"],"fullName":" usePatientData Runtime Validation validatePatientData should return Err for data missing required top-level fields (e.g., id)","status":"passed","title":"should return Err for data missing required top-level fields (e.g., id)","duration":1,"failureMessages":[]},{"ancestorTitles":["","usePatientData Runtime Validation","validatePatientData"],"fullName":" usePatientData Runtime Validation validatePatientData should return Err for data missing required nested fields (e.g., demographicData.age)","status":"passed","title":"should return Err for data missing required nested fields (e.g., demographicData.age)","duration":0,"failureMessages":[]},{"ancestorTitles":["","usePatientData Runtime Validation","validatePatientData"],"fullName":" usePatientData Runtime Validation validatePatientData should return Err for data with incorrect field types (e.g., id is number)","status":"passed","title":"should return Err for data with incorrect field types (e.g., id is number)","duration":1,"failureMessages":[]},{"ancestorTitles":["","usePatientData Runtime Validation","validatePatientData"],"fullName":" usePatientData Runtime Validation validatePatientData should return Err for data with incorrect nested field types (e.g., clinicalData.diagnoses is not array)","status":"passed","title":"should return Err for data with incorrect nested field types (e.g., clinicalData.diagnoses is not array)","duration":0,"failureMessages":[]}],"startTime":1743717598503,"endTime":1743717598507,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/hooks/usePatientData.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","usePatientData"],"fullName":" usePatientData processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":2,"failureMessages":[]},{"ancestorTitles":["","usePatientData"],"fullName":" usePatientData handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":3,"failureMessages":[]}],"startTime":1743717600245,"endTime":1743717600250,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/hooks/usePatientData.test.ts"},{"assertionResults":[{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Ok for a valid ParamsObject","status":"passed","title":"should return Ok for a valid ParamsObject","duration":1,"failureMessages":[]},{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Ok for an empty object","status":"passed","title":"should return Ok for an empty object","duration":0,"failureMessages":[]},{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Err for non-object input","status":"passed","title":"should return Err for non-object input","duration":1,"failureMessages":[]},{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Err for array input","status":"passed","title":"should return Err for array input","duration":1,"failureMessages":[]},{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Err for null input","status":"passed","title":"should return Err for null input","duration":0,"failureMessages":[]},{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Err for object with invalid value type (boolean)","status":"passed","title":"should return Err for object with invalid value type (boolean)","duration":0,"failureMessages":[]},{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Err for object with invalid value type (undefined)","status":"passed","title":"should return Err for object with invalid value type (undefined)","duration":1,"failureMessages":[]},{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Err for object with invalid value type (object)","status":"passed","title":"should return Err for object with invalid value type (object)","duration":0,"failureMessages":[]},{"ancestorTitles":["","useSearchParams Runtime Validation","validateParamsObject"],"fullName":" useSearchParams Runtime Validation validateParamsObject should return Err for object with invalid value type (array)","status":"passed","title":"should return Err for object with invalid value type (array)","duration":0,"failureMessages":[]}],"startTime":1743717599815,"endTime":1743717599819,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/hooks/useSearchParams.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","useSearchParams"],"fullName":" useSearchParams processes data with mathematical precision","status":"skipped","title":"processes data with mathematical precision","failureMessages":[]},{"ancestorTitles":["","useSearchParams"],"fullName":" useSearchParams handles edge cases with clinical precision","status":"skipped","title":"handles edge cases with clinical precision","failureMessages":[]}],"startTime":1743717596100,"endTime":1743717596100,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/hooks/useSearchParams.test.ts"},{"assertionResults":[{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Ok for a valid ThemeSettings object","status":"passed","title":"should return Ok for a valid ThemeSettings object","duration":1,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Ok for another valid ThemeSettings object (dark)","status":"passed","title":"should return Ok for another valid ThemeSettings object (dark)","duration":0,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Err for non-object input","status":"passed","title":"should return Err for non-object input","duration":1,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Err for null input","status":"passed","title":"should return Err for null input","duration":1,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Err for an empty object (missing required fields)","status":"passed","title":"should return Err for an empty object (missing required fields)","duration":0,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Err for data missing a required field (e.g., name)","status":"passed","title":"should return Err for data missing a required field (e.g., name)","duration":0,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Err for data with invalid theme name","status":"passed","title":"should return Err for data with invalid theme name","duration":0,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Err for data with incorrect field type (e.g., glowIntensity)","status":"passed","title":"should return Err for data with incorrect field type (e.g., glowIntensity)","duration":1,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Err for data with incorrect field type (e.g., useBloom)","status":"passed","title":"should return Err for data with incorrect field type (e.g., useBloom)","duration":0,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeSettings"],"fullName":" useTheme Runtime Validation validateThemeSettings should return Err for data missing a required color field (e.g., primaryColor)","status":"passed","title":"should return Err for data missing a required color field (e.g., primaryColor)","duration":0,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeOption"],"fullName":" useTheme Runtime Validation validateThemeOption should return Ok for valid ThemeOption values","status":"passed","title":"should return Ok for valid ThemeOption values","duration":1,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeOption"],"fullName":" useTheme Runtime Validation validateThemeOption should return Err for invalid ThemeOption values","status":"passed","title":"should return Err for invalid ThemeOption values","duration":0,"failureMessages":[]},{"ancestorTitles":["","useTheme Runtime Validation","validateThemeOption"],"fullName":" useTheme Runtime Validation validateThemeOption should return specific error message for invalid option","status":"passed","title":"should return specific error message for invalid option","duration":0,"failureMessages":[]}],"startTime":1743717598506,"endTime":1743717598512,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/hooks/useTheme.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","useTheme"],"fullName":" useTheme returns the theme context value when useContext provides a value","status":"skipped","title":"returns the theme context value when useContext provides a value","failureMessages":[]},{"ancestorTitles":["","useTheme"],"fullName":" useTheme throws an error when useContext returns undefined","status":"skipped","title":"throws an error when useContext returns undefined","failureMessages":[]}],"startTime":1743717596100,"endTime":1743717596100,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/hooks/useTheme.test.tsx"},{"assertionResults":[{"ancestorTitles":["","useNeuroSyncOrchestrator"],"fullName":" useNeuroSyncOrchestrator should initialize with default state","status":"failed","title":"should initialize with default state","duration":14,"failureMessages":["expected 'Failed to load brain model' to be null"],"location":{"line":83,"column":47}},{"ancestorTitles":["","useNeuroSyncOrchestrator"],"fullName":" useNeuroSyncOrchestrator should provide actions object","status":"passed","title":"should provide actions object","duration":6,"failureMessages":[]}],"startTime":1743717599458,"endTime":1743717599478,"status":"failed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/orchestrators/NeuroSyncOrchestrator.test.ts"},{"assertionResults":[{"ancestorTitles":["","ThemeProvider"],"fullName":" ThemeProvider renders with neural precision","status":"failed","title":"renders with neural precision","duration":15,"failureMessages":["Cannot read properties of undefined (reading 'clinical')"],"location":{"line":137,"column":15}},{"ancestorTitles":["","ThemeProvider"],"fullName":" ThemeProvider responds to user interaction with quantum precision","status":"failed","title":"responds to user interaction with quantum precision","duration":5,"failureMessages":["Cannot read properties of undefined (reading 'clinical')"],"location":{"line":137,"column":15}}],"startTime":1743717605132,"endTime":1743717605152,"status":"failed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/providers/ThemeProvider.test.tsx"},{"assertionResults":[{"ancestorTitles":["","SessionWarningModal"],"fullName":" SessionWarningModal renders with neural precision","status":"passed","title":"renders with neural precision","duration":19,"failureMessages":[]},{"ancestorTitles":["","SessionWarningModal"],"fullName":" SessionWarningModal responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":4,"failureMessages":[]}],"startTime":1743717603275,"endTime":1743717603298,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/components/molecules/SessionWarningModal.test.tsx"},{"assertionResults":[{"ancestorTitles":["","LoadingIndicator"],"fullName":" LoadingIndicator renders with neural precision","status":"passed","title":"renders with neural precision","duration":10,"failureMessages":[]},{"ancestorTitles":["","LoadingIndicator"],"fullName":" LoadingIndicator responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":3,"failureMessages":[]}],"startTime":1743717605136,"endTime":1743717605149,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/components/atoms/LoadingIndicator.test.tsx"},{"assertionResults":[{"ancestorTitles":["","SecureInput"],"fullName":" SecureInput renders with neural precision","status":"passed","title":"renders with neural precision","duration":38,"failureMessages":[]},{"ancestorTitles":["","SecureInput"],"fullName":" SecureInput responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":4,"failureMessages":[]}],"startTime":1743717604816,"endTime":1743717604858,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/components/atoms/SecureInput.test.tsx"},{"assertionResults":[{"ancestorTitles":["","ErrorBoundary"],"fullName":" ErrorBoundary renders with neural precision","status":"passed","title":"renders with neural precision","duration":11,"failureMessages":[]},{"ancestorTitles":["","ErrorBoundary"],"fullName":" ErrorBoundary responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":3,"failureMessages":[]}],"startTime":1743717604011,"endTime":1743717604025,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/components/utils/ErrorBoundary.test.tsx"},{"assertionResults":[],"startTime":1743717596100,"endTime":1743717596100,"status":"failed","message":"Failed to resolve import \"@domain/types/common\" from \"src/domain/models/brain/mapping/brain-mapping.ts\". Does the file exist?","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/models/index.test.ts"},{"assertionResults":[{"ancestorTitles":["","Domain utilities exports"],"fullName":" Domain utilities exports exports shared type verification utilities","status":"passed","title":"exports shared type verification utilities","duration":1,"failureMessages":[]},{"ancestorTitles":["","Domain utilities exports"],"fullName":" Domain utilities exports exports brain-specific type verification utilities","status":"passed","title":"exports brain-specific type verification utilities","duration":0,"failureMessages":[]},{"ancestorTitles":["","Domain utilities exports"],"fullName":" Domain utilities exports exports clinical-specific type verification utilities","status":"failed","title":"exports clinical-specific type verification utilities","duration":3,"failureMessages":["expected undefined not to be undefined"],"location":{"line":21,"column":40}},{"ancestorTitles":["","Domain utilities exports"],"fullName":" Domain utilities exports exports unified verifiers object","status":"passed","title":"exports unified verifiers object","duration":2,"failureMessages":[]},{"ancestorTitles":["","Domain utilities exports"],"fullName":" Domain utilities exports ensures verifiers have the correct methods","status":"failed","title":"ensures verifiers have the correct methods","duration":1,"failureMessages":["Cannot read properties of undefined (reading 'verifyPatient')"],"location":{"line":50,"column":46}}],"startTime":1743717601384,"endTime":1743717601392,"status":"failed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/utils/index.test.ts"},{"assertionResults":[{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should return Ok for valid data matching the guard","status":"passed","title":"should return Ok for valid data matching the guard","duration":1,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should return Ok for valid array data matching the array guard","status":"passed","title":"should return Ok for valid array data matching the array guard","duration":1,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should return Err for data not matching the guard (missing field)","status":"passed","title":"should return Err for data not matching the guard (missing field)","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should return Err for data not matching the guard (wrong type)","status":"failed","title":"should return Err for data not matching the guard (wrong type)","duration":6,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":70,"column":26}},{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should return Err for array data not matching the array guard","status":"passed","title":"should return Err for array data not matching the array guard","duration":26,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should return Err for non-object input when expecting object","status":"passed","title":"should return Err for non-object input when expecting object","duration":1,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should return Err for non-array input when expecting array","status":"passed","title":"should return Err for non-array input when expecting array","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should include context in the error message","status":"passed","title":"should include context in the error message","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","validateApiResponse"],"fullName":" ApiClient Runtime Validation validateApiResponse should handle unserializable data in error message","status":"passed","title":"should handle unserializable data in error message","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatient"],"fullName":" ApiClient Runtime Validation isApiPatient should return true for valid patient object","status":"passed","title":"should return true for valid patient object","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatient"],"fullName":" ApiClient Runtime Validation isApiPatient should return false for invalid patient object (missing name)","status":"passed","title":"should return false for invalid patient object (missing name)","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatient"],"fullName":" ApiClient Runtime Validation isApiPatient should return false for invalid patient object (wrong id type)","status":"failed","title":"should return false for invalid patient object (wrong id type)","duration":0,"failureMessages":["expected true to be false // Object.is equality"],"location":{"line":138,"column":60}},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatient"],"fullName":" ApiClient Runtime Validation isApiPatient should return false for null","status":"passed","title":"should return false for null","duration":1,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatient"],"fullName":" ApiClient Runtime Validation isApiPatient should return false for non-object","status":"passed","title":"should return false for non-object","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatientArray"],"fullName":" ApiClient Runtime Validation isApiPatientArray should return true for valid patient array","status":"passed","title":"should return true for valid patient array","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatientArray"],"fullName":" ApiClient Runtime Validation isApiPatientArray should return false for invalid patient array","status":"passed","title":"should return false for invalid patient array","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatientArray"],"fullName":" ApiClient Runtime Validation isApiPatientArray should return false for non-array","status":"passed","title":"should return false for non-array","duration":0,"failureMessages":[]},{"ancestorTitles":["","ApiClient Runtime Validation","isApiPatientArray"],"fullName":" ApiClient Runtime Validation isApiPatientArray should return true for empty array","status":"passed","title":"should return true for empty array","duration":0,"failureMessages":[]}],"startTime":1743717598535,"endTime":1743717598572,"status":"failed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/ApiClient.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","apiClient"],"fullName":" apiClient processes GET requests with mathematical precision","status":"passed","title":"processes GET requests with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","apiClient"],"fullName":" apiClient processes POST requests with clinical precision","status":"passed","title":"processes POST requests with clinical precision","duration":0,"failureMessages":[]},{"ancestorTitles":["","apiClient"],"fullName":" apiClient supports neural authorization patterns","status":"passed","title":"supports neural authorization patterns","duration":1,"failureMessages":[]}],"startTime":1743717600263,"endTime":1743717600265,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/ApiClient.test.ts"},{"assertionResults":[{"ancestorTitles":["","apiClient"],"fullName":" apiClient processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","apiClient"],"fullName":" apiClient handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717604076,"endTime":1743717604077,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/ApiGateway.test.ts"},{"assertionResults":[{"ancestorTitles":["","enhancedMockApiClient"],"fullName":" enhancedMockApiClient processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","enhancedMockApiClient"],"fullName":" enhancedMockApiClient handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717606102,"endTime":1743717606103,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/EnhancedMockApiClient.test.ts"},{"assertionResults":[{"ancestorTitles":["","IApiClient"],"fullName":" IApiClient processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":2,"failureMessages":[]},{"ancestorTitles":["","IApiClient"],"fullName":" IApiClient handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":1,"failureMessages":[]}],"startTime":1743717601019,"endTime":1743717601022,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/IApiClient.test.ts"},{"assertionResults":[{"ancestorTitles":["","mockApiClient"],"fullName":" mockApiClient generates brain models with mathematical precision","status":"passed","title":"generates brain models with mathematical precision","duration":2,"failureMessages":[]},{"ancestorTitles":["","mockApiClient"],"fullName":" mockApiClient handles default patient ID with clinical precision","status":"passed","title":"handles default patient ID with clinical precision","duration":802,"failureMessages":[]},{"ancestorTitles":["","mockApiClient"],"fullName":" mockApiClient returns consistent model structure with quantum-level type safety","status":"passed","title":"returns consistent model structure with quantum-level type safety","duration":802,"failureMessages":[]}],"startTime":1743717601440,"endTime":1743717603046,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/MockApiClient.test.ts"},{"assertionResults":[{"ancestorTitles":["","XGBoostService Runtime Validation","isRiskPredictionRequest"],"fullName":" XGBoostService Runtime Validation isRiskPredictionRequest should return true for valid RiskPredictionRequest","status":"passed","title":"should return true for valid RiskPredictionRequest","duration":1,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","isRiskPredictionRequest"],"fullName":" XGBoostService Runtime Validation isRiskPredictionRequest should return false for invalid RiskPredictionRequest (missing field)","status":"passed","title":"should return false for invalid RiskPredictionRequest (missing field)","duration":0,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","isRiskPredictionRequest"],"fullName":" XGBoostService Runtime Validation isRiskPredictionRequest should return false for null","status":"passed","title":"should return false for null","duration":0,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","isRiskPredictionRequest"],"fullName":" XGBoostService Runtime Validation isRiskPredictionRequest should return false for non-object","status":"passed","title":"should return false for non-object","duration":1,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","isRiskPredictionResponse"],"fullName":" XGBoostService Runtime Validation isRiskPredictionResponse should return true for valid RiskPredictionResponse","status":"passed","title":"should return true for valid RiskPredictionResponse","duration":0,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","isRiskPredictionResponse"],"fullName":" XGBoostService Runtime Validation isRiskPredictionResponse should return false for invalid RiskPredictionResponse (wrong type/enum)","status":"passed","title":"should return false for invalid RiskPredictionResponse (wrong type/enum)","duration":0,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","isRiskPredictionResponse"],"fullName":" XGBoostService Runtime Validation isRiskPredictionResponse should return false for null","status":"passed","title":"should return false for null","duration":0,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","isRiskPredictionResponse"],"fullName":" XGBoostService Runtime Validation isRiskPredictionResponse should return false for non-object","status":"passed","title":"should return false for non-object","duration":0,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","validateData"],"fullName":" XGBoostService Runtime Validation validateData should return Ok when data matches the guard","status":"passed","title":"should return Ok when data matches the guard","duration":1,"failureMessages":[]},{"ancestorTitles":["","XGBoostService Runtime Validation","validateData"],"fullName":" XGBoostService Runtime Validation validateData should return Err when data does not match the guard","status":"passed","title":"should return Err when data does not match the guard","duration":2,"failureMessages":[]}],"startTime":1743717599373,"endTime":1743717599378,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/XGBoostService.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","XGBoostService"],"fullName":" XGBoostService processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":0,"failureMessages":[]},{"ancestorTitles":["","XGBoostService"],"fullName":" XGBoostService handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717603360,"endTime":1743717603360,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/XGBoostService.test.ts"},{"assertionResults":[{"ancestorTitles":["","mockApi"],"fullName":" mockApi processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":13,"failureMessages":[]},{"ancestorTitles":["","mockApi"],"fullName":" mockApi handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717602955,"endTime":1743717602968,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/infrastructure/api/mockApi.test.ts"},{"assertionResults":[{"ancestorTitles":["","ActivityIndicator"],"fullName":" ActivityIndicator renders with neural precision","status":"failed","title":"renders with neural precision","duration":17,"failureMessages":["Objects are not valid as a React child (found: object with keys {position, scale, children, type}). If you meant to render a collection of children, use an array instead."],"location":{"line":13123,"column":9}},{"ancestorTitles":["","ActivityIndicator"],"fullName":" ActivityIndicator responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":0,"failureMessages":[]}],"startTime":1743717601702,"endTime":1743717601719,"status":"failed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/atoms/ActivityIndicator.test.tsx"},{"assertionResults":[{"ancestorTitles":["","Button"],"fullName":" Button renders with neural precision","status":"passed","title":"renders with neural precision","duration":14,"failureMessages":[]},{"ancestorTitles":["","Button"],"fullName":" Button responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":3,"failureMessages":[]}],"startTime":1743717605909,"endTime":1743717605926,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/atoms/Button.test.tsx"},{"assertionResults":[{"ancestorTitles":["","Card"],"fullName":" Card renders with neural precision","status":"passed","title":"renders with neural precision","duration":23,"failureMessages":[]},{"ancestorTitles":["","Card"],"fullName":" Card responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":3,"failureMessages":[]}],"startTime":1743717604780,"endTime":1743717604806,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/atoms/Card.test.tsx"},{"assertionResults":[{"ancestorTitles":["","DocumentTitle"],"fullName":" DocumentTitle renders with neural precision","status":"passed","title":"renders with neural precision","duration":9,"failureMessages":[]},{"ancestorTitles":["","DocumentTitle"],"fullName":" DocumentTitle responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":3,"failureMessages":[]}],"startTime":1743717605774,"endTime":1743717605786,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/atoms/DocumentTitle.test.tsx"},{"assertionResults":[{"ancestorTitles":["","index"],"fullName":" index processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":0,"failureMessages":[]},{"ancestorTitles":["","index"],"fullName":" index handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":1,"failureMessages":[]}],"startTime":1743717603788,"endTime":1743717603789,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/atoms/index.test.ts"},{"assertionResults":[],"startTime":1743717596100,"endTime":1743717596100,"status":"failed","message":"Cannot call vi.mock() inside vi.mock(): both methods are hoisted to the top of the file and not actually called inside each other.","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/common/AdaptiveLOD.test.tsx"},{"assertionResults":[{"ancestorTitles":["","LoadingFallback"],"fullName":" LoadingFallback renders with neural precision","status":"passed","title":"renders with neural precision","duration":82,"failureMessages":[]},{"ancestorTitles":["","LoadingFallback"],"fullName":" LoadingFallback responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":11,"failureMessages":[]}],"startTime":1743717606068,"endTime":1743717606161,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/common/LoadingFallback.test.tsx"},{"assertionResults":[],"startTime":1743717596100,"endTime":1743717596100,"status":"failed","message":"Failed to resolve import \"@domain/types/common\" from \"src/presentation/common/PerformanceMonitor.tsx\". Does the file exist?","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/common/PerformanceMonitor.test.tsx"},{"assertionResults":[{"ancestorTitles":["","TreatmentResponsePredictor"],"fullName":" TreatmentResponsePredictor renders with neural precision","status":"passed","title":"renders with neural precision","duration":34,"failureMessages":[]},{"ancestorTitles":["","TreatmentResponsePredictor"],"fullName":" TreatmentResponsePredictor responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":44,"failureMessages":[]}],"startTime":1743717598220,"endTime":1743717598298,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/organisms/TreatmentResponsePredictor.test.tsx"},{"assertionResults":[{"ancestorTitles":["","ClinicalDataOverlay"],"fullName":" ClinicalDataOverlay renders with neural precision","status":"passed","title":"renders with neural precision","duration":19,"failureMessages":[]},{"ancestorTitles":["","ClinicalDataOverlay"],"fullName":" ClinicalDataOverlay responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":4,"failureMessages":[]}],"startTime":1743717602182,"endTime":1743717602205,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/molecules/ClinicalDataOverlay.test.tsx"},{"assertionResults":[{"ancestorTitles":["","Header"],"fullName":" Header renders with neural precision","status":"passed","title":"renders with neural precision","duration":15,"failureMessages":[]},{"ancestorTitles":["","Header"],"fullName":" Header responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":4,"failureMessages":[]}],"startTime":1743717603778,"endTime":1743717603797,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/molecules/Header.test.tsx"},{"assertionResults":[{"ancestorTitles":["","PatientHeader"],"fullName":" PatientHeader renders with neural precision","status":"skipped","title":"renders with neural precision","failureMessages":[]},{"ancestorTitles":["","PatientHeader"],"fullName":" PatientHeader responds to user interaction with quantum precision","status":"skipped","title":"responds to user interaction with quantum precision","failureMessages":[]}],"startTime":1743717596100,"endTime":1743717596100,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/molecules/PatientHeader.test.tsx"},{"assertionResults":[{"ancestorTitles":["","index"],"fullName":" index processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","index"],"fullName":" index handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717604059,"endTime":1743717604060,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/molecules/index.test.ts"},{"assertionResults":[{"ancestorTitles":["","Login"],"fullName":" Login renders with neural precision","status":"passed","title":"renders with neural precision","duration":21,"failureMessages":[]},{"ancestorTitles":["","Login"],"fullName":" Login responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":5,"failureMessages":[]}],"startTime":1743717600642,"endTime":1743717600668,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/pages/Login.test.tsx"},{"assertionResults":[],"startTime":1743717596100,"endTime":1743717596100,"status":"failed","message":"Failed to resolve import \"@hooks/useTheme\" from \"src/presentation/organisms/BrainVisualization.tsx\". Does the file exist?","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/pages/PatientProfile.test.tsx"},{"assertionResults":[{"ancestorTitles":["","PatientsList"],"fullName":" PatientsList renders with neural precision","status":"passed","title":"renders with neural precision","duration":22,"failureMessages":[]},{"ancestorTitles":["","PatientsList"],"fullName":" PatientsList responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":3,"failureMessages":[]}],"startTime":1743717600358,"endTime":1743717600383,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/pages/PatientsList.test.tsx"},{"assertionResults":[{"ancestorTitles":["","Settings"],"fullName":" Settings renders with neural precision","status":"passed","title":"renders with neural precision","duration":48,"failureMessages":[]},{"ancestorTitles":["","Settings"],"fullName":" Settings responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":5,"failureMessages":[]}],"startTime":1743717600297,"endTime":1743717600350,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/pages/Settings.test.tsx"},{"assertionResults":[{"ancestorTitles":["","AuthRoute"],"fullName":" AuthRoute renders with neural precision","status":"passed","title":"renders with neural precision","duration":15,"failureMessages":[]},{"ancestorTitles":["","AuthRoute"],"fullName":" AuthRoute responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":2,"failureMessages":[]}],"startTime":1743717602069,"endTime":1743717602086,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/templates/AuthRoute.test.tsx"},{"assertionResults":[{"ancestorTitles":["","ErrorBoundary"],"fullName":" ErrorBoundary renders with neural precision","status":"passed","title":"renders with neural precision","duration":15,"failureMessages":[]},{"ancestorTitles":["","ErrorBoundary"],"fullName":" ErrorBoundary responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":4,"failureMessages":[]}],"startTime":1743717603990,"endTime":1743717604009,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/templates/ErrorBoundary.test.tsx"},{"assertionResults":[{"ancestorTitles":["","MainLayout"],"fullName":" MainLayout renders with neural precision","status":"passed","title":"renders with neural precision","duration":41,"failureMessages":[]},{"ancestorTitles":["","MainLayout"],"fullName":" MainLayout responds to user interaction with quantum precision","status":"passed","title":"responds to user interaction with quantum precision","duration":77,"failureMessages":[]}],"startTime":1743717600376,"endTime":1743717600494,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/presentation/templates/MainLayout.test.tsx"},{"assertionResults":[{"ancestorTitles":["","createNeuralGlowUniforms"],"fullName":" createNeuralGlowUniforms processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":2,"failureMessages":[]},{"ancestorTitles":["","createNeuralGlowUniforms"],"fullName":" createNeuralGlowUniforms handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717605637,"endTime":1743717605639,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/utils/shaders/neuralGlow.test.ts"},{"assertionResults":[{"ancestorTitles":["","BrainModelService Runtime Validation","isBrainModel"],"fullName":" BrainModelService Runtime Validation isBrainModel returns true for valid BrainModel objects","status":"passed","title":"returns true for valid BrainModel objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","isBrainModel"],"fullName":" BrainModelService Runtime Validation isBrainModel returns false for non-object values","status":"passed","title":"returns false for non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","isBrainModel"],"fullName":" BrainModelService Runtime Validation isBrainModel returns false for objects missing required properties","status":"failed","title":"returns false for objects missing required properties","duration":4,"failureMessages":["expected true to be false // Object.is equality"],"location":{"line":75,"column":9}},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainModel"],"fullName":" BrainModelService Runtime Validation validateBrainModel returns success for valid BrainModel objects","status":"passed","title":"returns success for valid BrainModel objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainModel"],"fullName":" BrainModelService Runtime Validation validateBrainModel returns failure for non-object values","status":"failed","title":"returns failure for non-object values","duration":0,"failureMessages":["expected 'Expected type \\'BrainModel\\', but rec…' to contain 'Invalid BrainModel'"],"location":{"line":143,"column":41}},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainModel"],"fullName":" BrainModelService Runtime Validation validateBrainModel returns failure for objects with invalid regions","status":"failed","title":"returns failure for objects with invalid regions","duration":1,"failureMessages":["expected 'Expected type \\'BrainRegion\\' at regi…' to contain 'invalid region'"],"location":{"line":172,"column":37}},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainModel"],"fullName":" BrainModelService Runtime Validation validateBrainModel returns failure for objects with invalid connections","status":"failed","title":"returns failure for objects with invalid connections","duration":0,"failureMessages":["expected 'Expected type \\'NeuralConnection\\' at…' to contain 'invalid connection'"],"location":{"line":202,"column":37}},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainModel"],"fullName":" BrainModelService Runtime Validation validateBrainModel includes the field path in error messages when provided","status":"failed","title":"includes the field path in error messages when provided","duration":1,"failureMessages":["expected undefined to be 'testField.id' // Object.is equality"],"location":{"line":208,"column":35}},{"ancestorTitles":["","BrainModelService Runtime Validation","isBrainRegion"],"fullName":" BrainModelService Runtime Validation isBrainRegion returns true for valid BrainRegion objects","status":"passed","title":"returns true for valid BrainRegion objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","isBrainRegion"],"fullName":" BrainModelService Runtime Validation isBrainRegion returns false for non-object values","status":"passed","title":"returns false for non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","isBrainRegion"],"fullName":" BrainModelService Runtime Validation isBrainRegion returns false for objects missing required properties","status":"passed","title":"returns false for objects missing required properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainRegion"],"fullName":" BrainModelService Runtime Validation validateBrainRegion returns success for valid BrainRegion objects","status":"passed","title":"returns success for valid BrainRegion objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainRegion"],"fullName":" BrainModelService Runtime Validation validateBrainRegion returns failure for non-object values","status":"failed","title":"returns failure for non-object values","duration":1,"failureMessages":["expected 'Expected type \\'BrainRegion\\', but re…' to contain 'Invalid BrainRegion'"],"location":{"line":287,"column":41}},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainRegion"],"fullName":" BrainModelService Runtime Validation validateBrainRegion returns failure for objects with invalid activityLevel","status":"passed","title":"returns failure for objects with invalid activityLevel","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","validateBrainRegion"],"fullName":" BrainModelService Runtime Validation validateBrainRegion includes the field path in error messages when provided","status":"failed","title":"includes the field path in error messages when provided","duration":1,"failureMessages":["expected undefined to be 'parentField.id' // Object.is equality"],"location":{"line":306,"column":35}},{"ancestorTitles":["","BrainModelService Runtime Validation","isNeuralConnection"],"fullName":" BrainModelService Runtime Validation isNeuralConnection returns true for valid NeuralConnection objects","status":"passed","title":"returns true for valid NeuralConnection objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","isNeuralConnection"],"fullName":" BrainModelService Runtime Validation isNeuralConnection returns false for non-object values","status":"passed","title":"returns false for non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","isNeuralConnection"],"fullName":" BrainModelService Runtime Validation isNeuralConnection returns false for objects missing required properties","status":"passed","title":"returns false for objects missing required properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","validateNeuralConnection"],"fullName":" BrainModelService Runtime Validation validateNeuralConnection returns success for valid NeuralConnection objects","status":"failed","title":"returns success for valid NeuralConnection objects","duration":0,"failureMessages":["expected false to be true // Object.is equality"],"location":{"line":368,"column":30}},{"ancestorTitles":["","BrainModelService Runtime Validation","validateNeuralConnection"],"fullName":" BrainModelService Runtime Validation validateNeuralConnection returns failure for non-object values","status":"failed","title":"returns failure for non-object values","duration":0,"failureMessages":["expected 'Expected type \\'NeuralConnection\\', b…' to contain 'Invalid NeuralConnection'"],"location":{"line":375,"column":41}},{"ancestorTitles":["","BrainModelService Runtime Validation","validateNeuralConnection"],"fullName":" BrainModelService Runtime Validation validateNeuralConnection returns failure for objects with invalid strength","status":"passed","title":"returns failure for objects with invalid strength","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","validateNeuralConnection"],"fullName":" BrainModelService Runtime Validation validateNeuralConnection returns failure for objects with invalid type","status":"passed","title":"returns failure for objects with invalid type","duration":0,"failureMessages":[]},{"ancestorTitles":["","BrainModelService Runtime Validation","validateNeuralConnection"],"fullName":" BrainModelService Runtime Validation validateNeuralConnection includes the field path in error messages when provided","status":"failed","title":"includes the field path in error messages when provided","duration":1,"failureMessages":["expected undefined to be 'connectionField.id' // Object.is equality"],"location":{"line":411,"column":35}}],"startTime":1743717596879,"endTime":1743717596892,"status":"failed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/services/brain/brain-model.service.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","Brain Model Service","fetchBrainModel"],"fullName":" Brain Model Service fetchBrainModel successfully fetches a brain model by ID","status":"passed","title":"successfully fetches a brain model by ID","duration":2,"failureMessages":[]},{"ancestorTitles":["","Brain Model Service","fetchBrainModel"],"fullName":" Brain Model Service fetchBrainModel handles API error responses appropriately","status":"passed","title":"handles API error responses appropriately","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Model Service","fetchBrainModel"],"fullName":" Brain Model Service fetchBrainModel handles network errors gracefully","status":"passed","title":"handles network errors gracefully","duration":2,"failureMessages":[]},{"ancestorTitles":["","Brain Model Service","searchBrainModels"],"fullName":" Brain Model Service searchBrainModels performs search with correct parameters","status":"passed","title":"performs search with correct parameters","duration":2,"failureMessages":[]},{"ancestorTitles":["","Brain Model Service","updateRegion"],"fullName":" Brain Model Service updateRegion successfully updates a brain region","status":"passed","title":"successfully updates a brain region","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Model Service","updateConnection"],"fullName":" Brain Model Service updateConnection successfully updates a neural connection","status":"passed","title":"successfully updates a neural connection","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Model Service","createAnnotation"],"fullName":" Brain Model Service createAnnotation successfully creates an annotation","status":"passed","title":"successfully creates an annotation","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Model Service","generateModel"],"fullName":" Brain Model Service generateModel successfully initiates model generation","status":"passed","title":"successfully initiates model generation","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Model Service","checkGenerationStatus"],"fullName":" Brain Model Service checkGenerationStatus retrieves the current generation status","status":"passed","title":"retrieves the current generation status","duration":0,"failureMessages":[]}],"startTime":1743717597695,"endTime":1743717597704,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/services/brain/brain-model.service.test.ts"},{"assertionResults":[{"ancestorTitles":["","ClinicalService Runtime Validation","isSymptom"],"fullName":" ClinicalService Runtime Validation isSymptom returns true for valid Symptom objects","status":"passed","title":"returns true for valid Symptom objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isSymptom"],"fullName":" ClinicalService Runtime Validation isSymptom returns false for non-object values","status":"passed","title":"returns false for non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isSymptom"],"fullName":" ClinicalService Runtime Validation isSymptom returns false for objects missing required properties","status":"passed","title":"returns false for objects missing required properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateSymptom"],"fullName":" ClinicalService Runtime Validation validateSymptom returns success for valid Symptom objects","status":"passed","title":"returns success for valid Symptom objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateSymptom"],"fullName":" ClinicalService Runtime Validation validateSymptom returns failure for non-object values","status":"passed","title":"returns failure for non-object values","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateSymptom"],"fullName":" ClinicalService Runtime Validation validateSymptom returns failure for objects with invalid severity","status":"passed","title":"returns failure for objects with invalid severity","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateSymptom"],"fullName":" ClinicalService Runtime Validation validateSymptom returns failure for objects with invalid onset date","status":"passed","title":"returns failure for objects with invalid onset date","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateSymptom"],"fullName":" ClinicalService Runtime Validation validateSymptom includes the field path in error messages when provided","status":"passed","title":"includes the field path in error messages when provided","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isDiagnosis"],"fullName":" ClinicalService Runtime Validation isDiagnosis returns true for valid Diagnosis objects","status":"passed","title":"returns true for valid Diagnosis objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isDiagnosis"],"fullName":" ClinicalService Runtime Validation isDiagnosis returns false for non-object values","status":"passed","title":"returns false for non-object values","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isDiagnosis"],"fullName":" ClinicalService Runtime Validation isDiagnosis returns false for objects missing required properties","status":"passed","title":"returns false for objects missing required properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateDiagnosis"],"fullName":" ClinicalService Runtime Validation validateDiagnosis returns success for valid Diagnosis objects","status":"passed","title":"returns success for valid Diagnosis objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateDiagnosis"],"fullName":" ClinicalService Runtime Validation validateDiagnosis returns failure for objects with invalid severity","status":"passed","title":"returns failure for objects with invalid severity","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateDiagnosis"],"fullName":" ClinicalService Runtime Validation validateDiagnosis returns failure for objects with invalid status","status":"passed","title":"returns failure for objects with invalid status","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isTreatment"],"fullName":" ClinicalService Runtime Validation isTreatment returns true for valid Treatment objects","status":"passed","title":"returns true for valid Treatment objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isTreatment"],"fullName":" ClinicalService Runtime Validation isTreatment returns false for non-object values","status":"passed","title":"returns false for non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateTreatment"],"fullName":" ClinicalService Runtime Validation validateTreatment returns success for valid Treatment objects","status":"passed","title":"returns success for valid Treatment objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateTreatment"],"fullName":" ClinicalService Runtime Validation validateTreatment returns success for valid Treatment with endDate","status":"passed","title":"returns success for valid Treatment with endDate","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateTreatment"],"fullName":" ClinicalService Runtime Validation validateTreatment returns failure for objects with invalid endDate","status":"passed","title":"returns failure for objects with invalid endDate","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isRiskAssessment"],"fullName":" ClinicalService Runtime Validation isRiskAssessment returns true for valid RiskAssessment objects","status":"passed","title":"returns true for valid RiskAssessment objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isRiskAssessment"],"fullName":" ClinicalService Runtime Validation isRiskAssessment returns false for non-object values","status":"passed","title":"returns false for non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateRiskAssessment"],"fullName":" ClinicalService Runtime Validation validateRiskAssessment returns success for valid RiskAssessment objects","status":"passed","title":"returns success for valid RiskAssessment objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateRiskAssessment"],"fullName":" ClinicalService Runtime Validation validateRiskAssessment returns failure for objects with invalid risk level","status":"passed","title":"returns failure for objects with invalid risk level","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isTreatmentResponsePrediction"],"fullName":" ClinicalService Runtime Validation isTreatmentResponsePrediction returns true for valid TreatmentResponsePrediction objects","status":"passed","title":"returns true for valid TreatmentResponsePrediction objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","isTreatmentResponsePrediction"],"fullName":" ClinicalService Runtime Validation isTreatmentResponsePrediction returns false for non-object values","status":"passed","title":"returns false for non-object values","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateTreatmentResponsePrediction"],"fullName":" ClinicalService Runtime Validation validateTreatmentResponsePrediction returns success for valid TreatmentResponsePrediction objects","status":"passed","title":"returns success for valid TreatmentResponsePrediction objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClinicalService Runtime Validation","validateTreatmentResponsePrediction"],"fullName":" ClinicalService Runtime Validation validateTreatmentResponsePrediction returns failure for objects with invalid timeToEffect","status":"passed","title":"returns failure for objects with invalid timeToEffect","duration":0,"failureMessages":[]}],"startTime":1743717596903,"endTime":1743717596911,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/services/clinical/clinical.service.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","Clinical Service","fetchSymptomMappings"],"fullName":" Clinical Service fetchSymptomMappings successfully fetches symptom neural mappings","status":"passed","title":"successfully fetches symptom neural mappings","duration":4,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","fetchSymptomMappings"],"fullName":" Clinical Service fetchSymptomMappings handles API error responses appropriately","status":"passed","title":"handles API error responses appropriately","duration":4,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","fetchDiagnosisMappings"],"fullName":" Clinical Service fetchDiagnosisMappings successfully fetches diagnosis neural mappings","status":"passed","title":"successfully fetches diagnosis neural mappings","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","fetchTreatmentMappings"],"fullName":" Clinical Service fetchTreatmentMappings successfully fetches treatment neural mappings","status":"passed","title":"successfully fetches treatment neural mappings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","fetchRiskAssessment"],"fullName":" Clinical Service fetchRiskAssessment successfully fetches patient risk assessment","status":"passed","title":"successfully fetches patient risk assessment","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","fetchRiskAssessment"],"fullName":" Clinical Service fetchRiskAssessment handles patient not found errors","status":"passed","title":"handles patient not found errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","fetchTreatmentPredictions"],"fullName":" Clinical Service fetchTreatmentPredictions successfully fetches treatment response predictions","status":"passed","title":"successfully fetches treatment response predictions","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","fetchPatientSymptoms"],"fullName":" Clinical Service fetchPatientSymptoms successfully fetches patient symptoms","status":"passed","title":"successfully fetches patient symptoms","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","updateSymptom"],"fullName":" Clinical Service updateSymptom successfully updates a patient symptom","status":"passed","title":"successfully updates a patient symptom","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","generateAlgorithmExplanation"],"fullName":" Clinical Service generateAlgorithmExplanation successfully generates an algorithm explanation","status":"passed","title":"successfully generates an algorithm explanation","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical Service","generateTemporalProjections"],"fullName":" Clinical Service generateTemporalProjections successfully generates temporal projections","status":"passed","title":"successfully generates temporal projections","duration":6,"failureMessages":[]}],"startTime":1743717596968,"endTime":1743717597011,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/services/clinical/clinical.service.test.ts"},{"assertionResults":[{"ancestorTitles":["","RiskAssessmentService","calculateDepressionRiskLevel"],"fullName":" RiskAssessmentService calculateDepressionRiskLevel correctly calculates critical risk level","status":"passed","title":"correctly calculates critical risk level","duration":1,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateDepressionRiskLevel"],"fullName":" RiskAssessmentService calculateDepressionRiskLevel correctly calculates high risk level","status":"passed","title":"correctly calculates high risk level","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateDepressionRiskLevel"],"fullName":" RiskAssessmentService calculateDepressionRiskLevel correctly calculates moderate risk level","status":"passed","title":"correctly calculates moderate risk level","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateDepressionRiskLevel"],"fullName":" RiskAssessmentService calculateDepressionRiskLevel correctly calculates low risk level","status":"passed","title":"correctly calculates low risk level","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateDepressionRiskLevel"],"fullName":" RiskAssessmentService calculateDepressionRiskLevel correctly calculates minimal risk level","status":"passed","title":"correctly calculates minimal risk level","duration":1,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateAnxietyRiskLevel"],"fullName":" RiskAssessmentService calculateAnxietyRiskLevel correctly calculates critical risk level","status":"passed","title":"correctly calculates critical risk level","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateAnxietyRiskLevel"],"fullName":" RiskAssessmentService calculateAnxietyRiskLevel correctly calculates high risk level","status":"passed","title":"correctly calculates high risk level","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateAnxietyRiskLevel"],"fullName":" RiskAssessmentService calculateAnxietyRiskLevel correctly calculates moderate risk level","status":"passed","title":"correctly calculates moderate risk level","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateOverallRiskLevel"],"fullName":" RiskAssessmentService calculateOverallRiskLevel correctly calculates critical overall risk","status":"passed","title":"correctly calculates critical overall risk","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateOverallRiskLevel"],"fullName":" RiskAssessmentService calculateOverallRiskLevel correctly calculates high overall risk","status":"passed","title":"correctly calculates high overall risk","duration":1,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateOverallRiskLevel"],"fullName":" RiskAssessmentService calculateOverallRiskLevel correctly calculates moderate overall risk","status":"passed","title":"correctly calculates moderate overall risk","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateOverallRiskLevel"],"fullName":" RiskAssessmentService calculateOverallRiskLevel correctly weighs risk factors","status":"passed","title":"correctly weighs risk factors","duration":0,"failureMessages":[]},{"ancestorTitles":["","RiskAssessmentService","calculateOverallRiskLevel"],"fullName":" RiskAssessmentService calculateOverallRiskLevel correctly accounts for social support as a protective factor","status":"passed","title":"correctly accounts for social support as a protective factor","duration":0,"failureMessages":[]}],"startTime":1743717598483,"endTime":1743717598486,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/application/services/clinical/risk-assessment.service.test.ts"},{"assertionResults":[{"ancestorTitles":["","Brain Model Runtime Validators","BrainRegionValidator"],"fullName":" Brain Model Runtime Validators BrainRegionValidator validates valid BrainRegion objects","status":"passed","title":"validates valid BrainRegion objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","BrainRegionValidator"],"fullName":" Brain Model Runtime Validators BrainRegionValidator rejects invalid BrainRegion objects","status":"passed","title":"rejects invalid BrainRegion objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","BrainRegionValidator"],"fullName":" Brain Model Runtime Validators BrainRegionValidator normalizes partial BrainRegion objects","status":"passed","title":"normalizes partial BrainRegion objects","duration":9,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","NeuralConnectionValidator"],"fullName":" Brain Model Runtime Validators NeuralConnectionValidator validates valid NeuralConnection objects","status":"passed","title":"validates valid NeuralConnection objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","NeuralConnectionValidator"],"fullName":" Brain Model Runtime Validators NeuralConnectionValidator rejects invalid NeuralConnection objects","status":"passed","title":"rejects invalid NeuralConnection objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","NeuralConnectionValidator"],"fullName":" Brain Model Runtime Validators NeuralConnectionValidator normalizes partial NeuralConnection objects","status":"passed","title":"normalizes partial NeuralConnection objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","BrainModelValidator"],"fullName":" Brain Model Runtime Validators BrainModelValidator validates valid BrainModel objects","status":"passed","title":"validates valid BrainModel objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","BrainModelValidator"],"fullName":" Brain Model Runtime Validators BrainModelValidator rejects invalid BrainModel objects","status":"passed","title":"rejects invalid BrainModel objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","BrainModelValidator"],"fullName":" Brain Model Runtime Validators BrainModelValidator normalizes partial BrainModel objects","status":"passed","title":"normalizes partial BrainModel objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Model Runtime Validators","BrainModelValidator"],"fullName":" Brain Model Runtime Validators BrainModelValidator normalizes model with partial regions and connections","status":"passed","title":"normalizes model with partial regions and connections","duration":1,"failureMessages":[]}],"startTime":1743717597642,"endTime":1743717597654,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/models/brain/brain-model.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","Patient Model Runtime Validators","PatientDemographicsValidator"],"fullName":" Patient Model Runtime Validators PatientDemographicsValidator validates valid PatientDemographics objects","status":"passed","title":"validates valid PatientDemographics objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","PatientDemographicsValidator"],"fullName":" Patient Model Runtime Validators PatientDemographicsValidator rejects invalid PatientDemographics objects","status":"passed","title":"rejects invalid PatientDemographics objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","PatientDemographicsValidator"],"fullName":" Patient Model Runtime Validators PatientDemographicsValidator normalizes partial PatientDemographics objects","status":"passed","title":"normalizes partial PatientDemographics objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","ClinicalHistoryValidator"],"fullName":" Patient Model Runtime Validators ClinicalHistoryValidator validates valid ClinicalHistory objects","status":"passed","title":"validates valid ClinicalHistory objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","ClinicalHistoryValidator"],"fullName":" Patient Model Runtime Validators ClinicalHistoryValidator rejects invalid ClinicalHistory objects","status":"passed","title":"rejects invalid ClinicalHistory objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","ClinicalHistoryValidator"],"fullName":" Patient Model Runtime Validators ClinicalHistoryValidator normalizes partial ClinicalHistory objects","status":"passed","title":"normalizes partial ClinicalHistory objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","MedicationValidator"],"fullName":" Patient Model Runtime Validators MedicationValidator validates valid Medication objects","status":"passed","title":"validates valid Medication objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","MedicationValidator"],"fullName":" Patient Model Runtime Validators MedicationValidator rejects invalid Medication objects","status":"passed","title":"rejects invalid Medication objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","MedicationValidator"],"fullName":" Patient Model Runtime Validators MedicationValidator normalizes partial Medication objects","status":"passed","title":"normalizes partial Medication objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","SymptomValidator"],"fullName":" Patient Model Runtime Validators SymptomValidator validates valid Symptom objects","status":"passed","title":"validates valid Symptom objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","SymptomValidator"],"fullName":" Patient Model Runtime Validators SymptomValidator rejects invalid Symptom objects","status":"passed","title":"rejects invalid Symptom objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","SymptomValidator"],"fullName":" Patient Model Runtime Validators SymptomValidator normalizes partial Symptom objects","status":"passed","title":"normalizes partial Symptom objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","TreatmentResponseValidator"],"fullName":" Patient Model Runtime Validators TreatmentResponseValidator validates valid TreatmentResponse objects","status":"passed","title":"validates valid TreatmentResponse objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","TreatmentResponseValidator"],"fullName":" Patient Model Runtime Validators TreatmentResponseValidator rejects invalid TreatmentResponse objects","status":"passed","title":"rejects invalid TreatmentResponse objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","TreatmentResponseValidator"],"fullName":" Patient Model Runtime Validators TreatmentResponseValidator normalizes partial TreatmentResponse objects","status":"passed","title":"normalizes partial TreatmentResponse objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","PatientModelValidator"],"fullName":" Patient Model Runtime Validators PatientModelValidator validates valid PatientModel objects","status":"passed","title":"validates valid PatientModel objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","PatientModelValidator"],"fullName":" Patient Model Runtime Validators PatientModelValidator rejects invalid PatientModel objects","status":"passed","title":"rejects invalid PatientModel objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","PatientModelValidator"],"fullName":" Patient Model Runtime Validators PatientModelValidator normalizes partial PatientModel objects","status":"passed","title":"normalizes partial PatientModel objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Patient Model Runtime Validators","PatientModelValidator"],"fullName":" Patient Model Runtime Validators PatientModelValidator normalizes model with partial nested objects","status":"passed","title":"normalizes model with partial nested objects","duration":0,"failureMessages":[]}],"startTime":1743717596879,"endTime":1743717596886,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/models/clinical/patient-model.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","TypeVerificationError"],"fullName":" TypeVerificationError formats error message with property path","status":"passed","title":"formats error message with property path","duration":1,"failureMessages":[]},{"ancestorTitles":["","TypeVerificationError"],"fullName":" TypeVerificationError formats error message without property path","status":"passed","title":"formats error message without property path","duration":1,"failureMessages":[]},{"ancestorTitles":["","TypeVerificationError"],"fullName":" TypeVerificationError handles different value types correctly","status":"passed","title":"handles different value types correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Assertion functions","assertDefined"],"fullName":" Assertion functions assertDefined passes for defined values","status":"passed","title":"passes for defined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Assertion functions","assertDefined"],"fullName":" Assertion functions assertDefined throws for undefined values","status":"passed","title":"throws for undefined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Assertion functions","assertPresent"],"fullName":" Assertion functions assertPresent passes for present values","status":"passed","title":"passes for present values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Assertion functions","assertPresent"],"fullName":" Assertion functions assertPresent throws for null or undefined values","status":"passed","title":"throws for null or undefined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Assertion functions","assertString"],"fullName":" Assertion functions assertString passes for strings","status":"passed","title":"passes for strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Assertion functions","assertString"],"fullName":" Assertion functions assertString throws for non-strings","status":"passed","title":"throws for non-strings","duration":1,"failureMessages":[]},{"ancestorTitles":["","Assertion functions","assertNumber"],"fullName":" Assertion functions assertNumber passes for numbers","status":"passed","title":"passes for numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Assertion functions","assertNumber"],"fullName":" Assertion functions assertNumber throws for non-numbers","status":"passed","title":"throws for non-numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateDefined"],"fullName":" Validation functions validateDefined returns true for defined values","status":"passed","title":"returns true for defined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateDefined"],"fullName":" Validation functions validateDefined returns false for undefined values","status":"passed","title":"returns false for undefined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validatePresent"],"fullName":" Validation functions validatePresent returns true for present values","status":"passed","title":"returns true for present values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validatePresent"],"fullName":" Validation functions validatePresent returns false for null or undefined values","status":"passed","title":"returns false for null or undefined values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateString"],"fullName":" Validation functions validateString returns true for strings","status":"passed","title":"returns true for strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateString"],"fullName":" Validation functions validateString returns false for non-strings","status":"passed","title":"returns false for non-strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateArrayOf"],"fullName":" Validation functions validateArrayOf validates arrays with valid elements","status":"passed","title":"validates arrays with valid elements","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateArrayOf"],"fullName":" Validation functions validateArrayOf rejects arrays with invalid elements","status":"passed","title":"rejects arrays with invalid elements","duration":1,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateArrayOf"],"fullName":" Validation functions validateArrayOf rejects non-arrays","status":"passed","title":"rejects non-arrays","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateProperty"],"fullName":" Validation functions validateProperty validates object properties","status":"passed","title":"validates object properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateProperty"],"fullName":" Validation functions validateProperty rejects invalid properties","status":"passed","title":"rejects invalid properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateProperty"],"fullName":" Validation functions validateProperty rejects missing properties","status":"passed","title":"rejects missing properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateProperty"],"fullName":" Validation functions validateProperty rejects non-objects","status":"passed","title":"rejects non-objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateOneOf"],"fullName":" Validation functions validateOneOf validates values from allowed set","status":"passed","title":"validates values from allowed set","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","validateOneOf"],"fullName":" Validation functions validateOneOf rejects values not in allowed set","status":"passed","title":"rejects values not in allowed set","duration":0,"failureMessages":[]},{"ancestorTitles":["","Validation functions","createObjectValidator"],"fullName":" Validation functions createObjectValidator creates a validator for an object type","status":"passed","title":"creates a validator for an object type","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asString"],"fullName":" Type conversion functions asString converts values to strings","status":"passed","title":"converts values to strings","duration":1,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asString"],"fullName":" Type conversion functions asString returns undefined for null/undefined","status":"passed","title":"returns undefined for null/undefined","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asNumber"],"fullName":" Type conversion functions asNumber converts valid values to numbers","status":"passed","title":"converts valid values to numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asNumber"],"fullName":" Type conversion functions asNumber returns undefined for invalid numbers","status":"passed","title":"returns undefined for invalid numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asBoolean"],"fullName":" Type conversion functions asBoolean converts boolean values","status":"passed","title":"converts boolean values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asBoolean"],"fullName":" Type conversion functions asBoolean converts string and number values to booleans","status":"passed","title":"converts string and number values to booleans","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asBoolean"],"fullName":" Type conversion functions asBoolean returns undefined for invalid values","status":"passed","title":"returns undefined for invalid values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asDate"],"fullName":" Type conversion functions asDate converts valid values to dates","status":"passed","title":"converts valid values to dates","duration":1,"failureMessages":[]},{"ancestorTitles":["","Type conversion functions","asDate"],"fullName":" Type conversion functions asDate returns undefined for invalid dates","status":"passed","title":"returns undefined for invalid dates","duration":0,"failureMessages":[]}],"startTime":1743717596900,"endTime":1743717596911,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/models/shared/type-verification.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","activity type definitions"],"fullName":" activity type definitions exports ActivationLevel with correct structure","status":"passed","title":"exports ActivationLevel with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","activity type definitions"],"fullName":" activity type definitions can use NeuralActivityState type for activity states","status":"passed","title":"can use NeuralActivityState type for activity states","duration":1,"failureMessages":[]},{"ancestorTitles":["","activity type definitions"],"fullName":" activity type definitions can use NeuralActivationPattern type for activation patterns","status":"passed","title":"can use NeuralActivationPattern type for activation patterns","duration":0,"failureMessages":[]},{"ancestorTitles":["","activity type definitions"],"fullName":" activity type definitions can use NeuralStateTransition type for neural transitions","status":"passed","title":"can use NeuralStateTransition type for neural transitions","duration":0,"failureMessages":[]},{"ancestorTitles":["","activity type definitions"],"fullName":" activity type definitions can use TemporalActivationSequence type for sequences","status":"passed","title":"can use TemporalActivationSequence type for sequences","duration":0,"failureMessages":[]},{"ancestorTitles":["","activity type definitions"],"fullName":" activity type definitions can use NeuralActivityHeatmap type for spatial activity maps","status":"passed","title":"can use NeuralActivityHeatmap type for spatial activity maps","duration":0,"failureMessages":[]},{"ancestorTitles":["","activity type definitions"],"fullName":" activity type definitions can use ActivityVisualizationSettings type for visualization","status":"passed","title":"can use ActivityVisualizationSettings type for visualization","duration":0,"failureMessages":[]}],"startTime":1743717599352,"endTime":1743717599353,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/brain/activity.test.ts"},{"assertionResults":[{"ancestorTitles":["","Brain Core Models runtime validators","Vector3Validator"],"fullName":" Brain Core Models runtime validators Vector3Validator validates valid Vector3 objects","status":"passed","title":"validates valid Vector3 objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","Vector3Validator"],"fullName":" Brain Core Models runtime validators Vector3Validator rejects invalid Vector3 objects","status":"passed","title":"rejects invalid Vector3 objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","CoordinateValidator"],"fullName":" Brain Core Models runtime validators CoordinateValidator validates valid Coordinate objects","status":"passed","title":"validates valid Coordinate objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","CoordinateValidator"],"fullName":" Brain Core Models runtime validators CoordinateValidator rejects invalid Coordinate objects","status":"passed","title":"rejects invalid Coordinate objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","BrainRegionValidator"],"fullName":" Brain Core Models runtime validators BrainRegionValidator validates valid BrainRegion objects","status":"passed","title":"validates valid BrainRegion objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","BrainRegionValidator"],"fullName":" Brain Core Models runtime validators BrainRegionValidator rejects invalid BrainRegion objects","status":"passed","title":"rejects invalid BrainRegion objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","ConnectionValidator"],"fullName":" Brain Core Models runtime validators ConnectionValidator validates valid Connection objects","status":"passed","title":"validates valid Connection objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","ConnectionValidator"],"fullName":" Brain Core Models runtime validators ConnectionValidator rejects invalid Connection objects","status":"passed","title":"rejects invalid Connection objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","BrainModelValidator"],"fullName":" Brain Core Models runtime validators BrainModelValidator validates valid BrainModel objects","status":"passed","title":"validates valid BrainModel objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Core Models runtime validators","BrainModelValidator"],"fullName":" Brain Core Models runtime validators BrainModelValidator rejects invalid BrainModel objects","status":"passed","title":"rejects invalid BrainModel objects","duration":0,"failureMessages":[]}],"startTime":1743717598473,"endTime":1743717598476,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/brain/core-models.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","index"],"fullName":" index processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":0,"failureMessages":[]},{"ancestorTitles":["","index"],"fullName":" index handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":1,"failureMessages":[]}],"startTime":1743717602693,"endTime":1743717602694,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/brain/index.test.ts"},{"assertionResults":[{"ancestorTitles":["","models type definitions"],"fullName":" models type definitions exports BrainRegion with correct structure","status":"passed","title":"exports BrainRegion with correct structure","duration":1,"failureMessages":[]},{"ancestorTitles":["","models type definitions"],"fullName":" models type definitions exports NeuralConnection with correct structure","status":"passed","title":"exports NeuralConnection with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","models type definitions"],"fullName":" models type definitions exports BrainScan with correct structure","status":"passed","title":"exports BrainScan with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","models type definitions"],"fullName":" models type definitions exports BrainModel with correct structure","status":"passed","title":"exports BrainModel with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","models type definitions"],"fullName":" models type definitions exports NeuralActivity with correct structure","status":"passed","title":"exports NeuralActivity with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","models type definitions"],"fullName":" models type definitions exports ActivityTimeSeries with correct structure","status":"passed","title":"exports ActivityTimeSeries with correct structure","duration":1,"failureMessages":[]},{"ancestorTitles":["","models type definitions"],"fullName":" models type definitions exports RegionClinicalData with correct structure","status":"passed","title":"exports RegionClinicalData with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","models type definitions"],"fullName":" models type definitions exports undefined with correct structure","status":"passed","title":"exports undefined with correct structure","duration":0,"failureMessages":[]}],"startTime":1743717598850,"endTime":1743717598852,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/brain/models.test.ts"},{"assertionResults":[{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators RenderModeValidator validates correct render modes","status":"passed","title":"RenderModeValidator validates correct render modes","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators VisualizationSettingsValidator validates correct VisualizationSettings objects","status":"passed","title":"VisualizationSettingsValidator validates correct VisualizationSettings objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators ThemeOptionValidator validates correct theme options","status":"passed","title":"ThemeOptionValidator validates correct theme options","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators ThemeSettingsValidator validates correct ThemeSettings objects","status":"passed","title":"ThemeSettingsValidator validates correct ThemeSettings objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators BrainVisualizationPropsValidator validates correct BrainVisualizationProps objects","status":"passed","title":"BrainVisualizationPropsValidator validates correct BrainVisualizationProps objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators BrainVisualizationStateValidator validates correct BrainVisualizationState objects","status":"passed","title":"BrainVisualizationStateValidator validates correct BrainVisualizationState objects","duration":7,"failureMessages":[]},{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators ProcessedBrainDataValidator validates correct ProcessedBrainData objects","status":"passed","title":"ProcessedBrainDataValidator validates correct ProcessedBrainData objects","duration":2,"failureMessages":[]},{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators ProcessedBrainRegionValidator validates correct ProcessedBrainRegion objects","status":"passed","title":"ProcessedBrainRegionValidator validates correct ProcessedBrainRegion objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain Visualization runtime validators"],"fullName":" Brain Visualization runtime validators ProcessedNeuralConnectionValidator validates correct ProcessedNeuralConnection objects","status":"passed","title":"ProcessedNeuralConnectionValidator validates correct ProcessedNeuralConnection objects","duration":0,"failureMessages":[]}],"startTime":1743717597641,"endTime":1743717597653,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/brain/visualization.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions exports visualizationThemes with correct structure","status":"passed","title":"exports visualizationThemes with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions exports defaultVisualizationSettings with correct structure","status":"passed","title":"exports defaultVisualizationSettings with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions exports RenderMode with correct structure","status":"passed","title":"exports RenderMode with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions can use VisualizationSettings type for settings objects","status":"passed","title":"can use VisualizationSettings type for settings objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions can use ThemeOption type for theme values","status":"passed","title":"can use ThemeOption type for theme values","duration":1,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions can use ThemeSettings type for theme configuration","status":"passed","title":"can use ThemeSettings type for theme configuration","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions can use BrainVisualizationProps type for component props","status":"passed","title":"can use BrainVisualizationProps type for component props","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions can use BrainVisualizationState type for component states","status":"passed","title":"can use BrainVisualizationState type for component states","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions can use ProcessedBrainData type for visualization data","status":"passed","title":"can use ProcessedBrainData type for visualization data","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions can use ProcessedBrainRegion type for region rendering data","status":"passed","title":"can use ProcessedBrainRegion type for region rendering data","duration":0,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions can use ProcessedNeuralConnection type for connection rendering data","status":"passed","title":"can use ProcessedNeuralConnection type for connection rendering data","duration":1,"failureMessages":[]},{"ancestorTitles":["","visualization type definitions"],"fullName":" visualization type definitions exports utility functions for type validation","status":"passed","title":"exports utility functions for type validation","duration":0,"failureMessages":[]}],"startTime":1743717599307,"endTime":1743717599310,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/brain/visualization.test.ts"},{"assertionResults":[{"ancestorTitles":["","index"],"fullName":" index processes data with mathematical precision","status":"passed","title":"processes data with mathematical precision","duration":1,"failureMessages":[]},{"ancestorTitles":["","index"],"fullName":" index handles edge cases with clinical precision","status":"passed","title":"handles edge cases with clinical precision","duration":0,"failureMessages":[]}],"startTime":1743717602609,"endTime":1743717602610,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/clinical/index.test.ts"},{"assertionResults":[{"ancestorTitles":["","Patient runtime validators"],"fullName":" Patient runtime validators PatientValidator validates correct Patient objects","status":"passed","title":"PatientValidator validates correct Patient objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Patient runtime validators"],"fullName":" Patient runtime validators PatientDemographicsValidator validates correct PatientDemographics objects","status":"passed","title":"PatientDemographicsValidator validates correct PatientDemographics objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient runtime validators"],"fullName":" Patient runtime validators DiagnosisValidator validates correct Diagnosis objects","status":"passed","title":"DiagnosisValidator validates correct Diagnosis objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient runtime validators"],"fullName":" Patient runtime validators SymptomValidator validates correct Symptom objects","status":"passed","title":"SymptomValidator validates correct Symptom objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Patient runtime validators"],"fullName":" Patient runtime validators MedicationValidator validates correct Medication objects","status":"passed","title":"MedicationValidator validates correct Medication objects","duration":1,"failureMessages":[]}],"startTime":1743717599493,"endTime":1743717599495,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/clinical/patient.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","Risk Level runtime validators"],"fullName":" Risk Level runtime validators RiskLevelValidator validates correct risk levels","status":"passed","title":"RiskLevelValidator validates correct risk levels","duration":1,"failureMessages":[]},{"ancestorTitles":["","Risk Level runtime validators"],"fullName":" Risk Level runtime validators RiskLevelValidator normalizes risk levels correctly","status":"passed","title":"RiskLevelValidator normalizes risk levels correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","Risk Level runtime validators"],"fullName":" Risk Level runtime validators RiskLevelValidator returns correct severity levels","status":"passed","title":"RiskLevelValidator returns correct severity levels","duration":0,"failureMessages":[]}],"startTime":1743717600971,"endTime":1743717600973,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/clinical/risk-level.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","Risk runtime validators"],"fullName":" Risk runtime validators RiskLevelValidator validates correct RiskLevel values","status":"passed","title":"RiskLevelValidator validates correct RiskLevel values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Risk runtime validators"],"fullName":" Risk runtime validators RiskAssessmentValidator validates correct RiskAssessment objects","status":"passed","title":"RiskAssessmentValidator validates correct RiskAssessment objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Risk runtime validators"],"fullName":" Risk runtime validators DomainRiskValidator validates correct DomainRisk objects","status":"passed","title":"DomainRiskValidator validates correct DomainRisk objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Risk runtime validators"],"fullName":" Risk runtime validators ContributingFactorValidator validates correct ContributingFactor objects","status":"passed","title":"ContributingFactorValidator validates correct ContributingFactor objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Risk runtime validators"],"fullName":" Risk runtime validators ProtectiveFactorValidator validates correct ProtectiveFactor objects","status":"passed","title":"ProtectiveFactorValidator validates correct ProtectiveFactor objects","duration":0,"failureMessages":[]}],"startTime":1743717598494,"endTime":1743717598496,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/clinical/risk.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators TreatmentTypeValidator validates correct treatment types","status":"passed","title":"TreatmentTypeValidator validates correct treatment types","duration":1,"failureMessages":[]},{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators TreatmentResponseRequestValidator validates correct TreatmentResponseRequest objects","status":"passed","title":"TreatmentResponseRequestValidator validates correct TreatmentResponseRequest objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators TreatmentDetailsValidator validates correct TreatmentDetails objects","status":"passed","title":"TreatmentDetailsValidator validates correct TreatmentDetails objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators TreatmentDetailsValidator.isValidMedication validates medication details","status":"passed","title":"TreatmentDetailsValidator.isValidMedication validates medication details","duration":0,"failureMessages":[]},{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators ClinicalPredictionDataValidator validates correct ClinicalPredictionData objects","status":"passed","title":"ClinicalPredictionDataValidator validates correct ClinicalPredictionData objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators GeneticPredictionDataValidator validates correct GeneticPredictionData objects","status":"passed","title":"GeneticPredictionDataValidator validates correct GeneticPredictionData objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators BiomarkerDataValidator validates correct BiomarkerData objects","status":"passed","title":"BiomarkerDataValidator validates correct BiomarkerData objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators TreatmentResponsePredictionValidator validates correct TreatmentResponsePrediction objects","status":"passed","title":"TreatmentResponsePredictionValidator validates correct TreatmentResponsePrediction objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Treatment runtime validators"],"fullName":" Treatment runtime validators TreatmentComparisonResultValidator validates correct TreatmentComparisonResult objects","status":"passed","title":"TreatmentComparisonResultValidator validates correct TreatmentComparisonResult objects","duration":0,"failureMessages":[]}],"startTime":1743717596868,"endTime":1743717596871,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/clinical/treatment.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","Neural Transforms runtime validators"],"fullName":" Neural Transforms runtime validators NeuralTransformValidator validates correct NeuralTransform objects","status":"passed","title":"NeuralTransformValidator validates correct NeuralTransform objects","duration":3,"failureMessages":[]},{"ancestorTitles":["","Neural Transforms runtime validators"],"fullName":" Neural Transforms runtime validators NeuralTransformBatchValidator validates correct NeuralTransformBatch objects","status":"passed","title":"NeuralTransformBatchValidator validates correct NeuralTransformBatch objects","duration":6,"failureMessages":[]},{"ancestorTitles":["","Neural Transforms runtime validators"],"fullName":" Neural Transforms runtime validators NeuralTransformSequenceValidator validates correct NeuralTransformSequence objects","status":"passed","title":"NeuralTransformSequenceValidator validates correct NeuralTransformSequence objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Neural Transforms runtime validators"],"fullName":" Neural Transforms runtime validators NeuralTransformResultValidator validates correct NeuralTransformResult objects","status":"passed","title":"NeuralTransformResultValidator validates correct NeuralTransformResult objects","duration":0,"failureMessages":[]}],"startTime":1743717597641,"endTime":1743717597651,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/neural/transforms.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","transforms type definitions"],"fullName":" transforms type definitions exports NeuralTransform with correct structure","status":"passed","title":"exports NeuralTransform with correct structure","duration":1,"failureMessages":[]},{"ancestorTitles":["","transforms type definitions"],"fullName":" transforms type definitions exports NeuralTransformBatch with correct structure","status":"passed","title":"exports NeuralTransformBatch with correct structure","duration":1,"failureMessages":[]},{"ancestorTitles":["","transforms type definitions"],"fullName":" transforms type definitions exports NeuralTransformSequence with correct structure","status":"passed","title":"exports NeuralTransformSequence with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","transforms type definitions"],"fullName":" transforms type definitions exports NeuralTransformResult with correct structure","status":"passed","title":"exports NeuralTransformResult with correct structure","duration":1,"failureMessages":[]}],"startTime":1743717601966,"endTime":1743717601969,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/neural/transforms.test.ts"},{"assertionResults":[{"ancestorTitles":["","Common Shared Types runtime validators","IDValidator"],"fullName":" Common Shared Types runtime validators IDValidator validates valid IDs","status":"passed","title":"validates valid IDs","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","IDValidator"],"fullName":" Common Shared Types runtime validators IDValidator rejects invalid IDs","status":"passed","title":"rejects invalid IDs","duration":1,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","TimestampedEntityValidator"],"fullName":" Common Shared Types runtime validators TimestampedEntityValidator validates valid TimestampedEntity objects","status":"passed","title":"validates valid TimestampedEntity objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","TimestampedEntityValidator"],"fullName":" Common Shared Types runtime validators TimestampedEntityValidator rejects invalid TimestampedEntity objects","status":"passed","title":"rejects invalid TimestampedEntity objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","UserGeneratedContentValidator"],"fullName":" Common Shared Types runtime validators UserGeneratedContentValidator validates valid UserGeneratedContent objects","status":"passed","title":"validates valid UserGeneratedContent objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","UserGeneratedContentValidator"],"fullName":" Common Shared Types runtime validators UserGeneratedContentValidator rejects invalid UserGeneratedContent objects","status":"passed","title":"rejects invalid UserGeneratedContent objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","AuditableValidator"],"fullName":" Common Shared Types runtime validators AuditableValidator validates valid Auditable objects","status":"passed","title":"validates valid Auditable objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","AuditableValidator"],"fullName":" Common Shared Types runtime validators AuditableValidator rejects invalid Auditable objects","status":"passed","title":"rejects invalid Auditable objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","VersionedEntityValidator"],"fullName":" Common Shared Types runtime validators VersionedEntityValidator validates valid VersionedEntity objects","status":"passed","title":"validates valid VersionedEntity objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","VersionedEntityValidator"],"fullName":" Common Shared Types runtime validators VersionedEntityValidator rejects invalid VersionedEntity objects","status":"passed","title":"rejects invalid VersionedEntity objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","SortOrderValidator"],"fullName":" Common Shared Types runtime validators SortOrderValidator validates valid SortOrder values","status":"passed","title":"validates valid SortOrder values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","SortOrderValidator"],"fullName":" Common Shared Types runtime validators SortOrderValidator rejects invalid SortOrder values","status":"passed","title":"rejects invalid SortOrder values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","RangeValidator"],"fullName":" Common Shared Types runtime validators RangeValidator validates valid Range objects","status":"passed","title":"validates valid Range objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","RangeValidator"],"fullName":" Common Shared Types runtime validators RangeValidator rejects invalid Range objects","status":"passed","title":"rejects invalid Range objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","Point2DValidator"],"fullName":" Common Shared Types runtime validators Point2DValidator validates valid Point2D objects","status":"passed","title":"validates valid Point2D objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","Point2DValidator"],"fullName":" Common Shared Types runtime validators Point2DValidator rejects invalid Point2D objects","status":"passed","title":"rejects invalid Point2D objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","ColorRGBValidator"],"fullName":" Common Shared Types runtime validators ColorRGBValidator validates valid ColorRGB objects","status":"passed","title":"validates valid ColorRGB objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","ColorRGBValidator"],"fullName":" Common Shared Types runtime validators ColorRGBValidator rejects invalid ColorRGB objects","status":"passed","title":"rejects invalid ColorRGB objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","ColorRGBAValidator"],"fullName":" Common Shared Types runtime validators ColorRGBAValidator validates valid ColorRGBA objects","status":"passed","title":"validates valid ColorRGBA objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","ColorRGBAValidator"],"fullName":" Common Shared Types runtime validators ColorRGBAValidator rejects invalid ColorRGBA objects","status":"passed","title":"rejects invalid ColorRGBA objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","DimensionsValidator"],"fullName":" Common Shared Types runtime validators DimensionsValidator validates valid Dimensions objects","status":"passed","title":"validates valid Dimensions objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Common Shared Types runtime validators","DimensionsValidator"],"fullName":" Common Shared Types runtime validators DimensionsValidator rejects invalid Dimensions objects","status":"passed","title":"rejects invalid Dimensions objects","duration":0,"failureMessages":[]}],"startTime":1743717597598,"endTime":1743717597602,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/types/shared/common.runtime.test.ts"},{"assertionResults":[{"ancestorTitles":["","Brain type verification","verifyVector3"],"fullName":" Brain type verification verifyVector3 verifies valid Vector3 objects","status":"passed","title":"verifies valid Vector3 objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyVector3"],"fullName":" Brain type verification verifyVector3 fails on non-object values","status":"passed","title":"fails on non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyVector3"],"fullName":" Brain type verification verifyVector3 fails when coordinates are not numbers","status":"passed","title":"fails when coordinates are not numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyVector3"],"fullName":" Brain type verification verifyVector3 fails when coordinates are missing","status":"passed","title":"fails when coordinates are missing","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","safelyParseVector3"],"fullName":" Brain type verification safelyParseVector3 returns Vector3 for valid objects","status":"passed","title":"returns Vector3 for valid objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","safelyParseVector3"],"fullName":" Brain type verification safelyParseVector3 converts string or non-numeric values","status":"passed","title":"converts string or non-numeric values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","safelyParseVector3"],"fullName":" Brain type verification safelyParseVector3 uses fallback for missing values","status":"passed","title":"uses fallback for missing values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","safelyParseVector3"],"fullName":" Brain type verification safelyParseVector3 returns fallback for non-object values","status":"passed","title":"returns fallback for non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyRenderMode"],"fullName":" Brain type verification verifyRenderMode verifies valid RenderMode values","status":"passed","title":"verifies valid RenderMode values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyRenderMode"],"fullName":" Brain type verification verifyRenderMode fails on invalid RenderMode values","status":"passed","title":"fails on invalid RenderMode values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyBrainRegion"],"fullName":" Brain type verification verifyBrainRegion verifies valid BrainRegion objects","status":"passed","title":"verifies valid BrainRegion objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyBrainRegion"],"fullName":" Brain type verification verifyBrainRegion accepts optional properties","status":"passed","title":"accepts optional properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyBrainRegion"],"fullName":" Brain type verification verifyBrainRegion fails when required properties are missing","status":"passed","title":"fails when required properties are missing","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyBrainRegion"],"fullName":" Brain type verification verifyBrainRegion fails when properties have wrong types","status":"passed","title":"fails when properties have wrong types","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyNeuralConnection"],"fullName":" Brain type verification verifyNeuralConnection verifies valid NeuralConnection objects","status":"passed","title":"verifies valid NeuralConnection objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyNeuralConnection"],"fullName":" Brain type verification verifyNeuralConnection accepts optional properties","status":"passed","title":"accepts optional properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyNeuralConnection"],"fullName":" Brain type verification verifyNeuralConnection fails when required properties are missing","status":"passed","title":"fails when required properties are missing","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyBrainModel"],"fullName":" Brain type verification verifyBrainModel verifies valid BrainModel objects","status":"passed","title":"verifies valid BrainModel objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyBrainModel"],"fullName":" Brain type verification verifyBrainModel accepts optional properties","status":"passed","title":"accepts optional properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyBrainModel"],"fullName":" Brain type verification verifyBrainModel fails when required properties are missing","status":"passed","title":"fails when required properties are missing","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","verifyBrainModel"],"fullName":" Brain type verification verifyBrainModel fails when arrays contain invalid items","status":"passed","title":"fails when arrays contain invalid items","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","assertion functions"],"fullName":" Brain type verification assertion functions assertVector3 passes for valid Vector3","status":"passed","title":"assertVector3 passes for valid Vector3","duration":1,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","assertion functions"],"fullName":" Brain type verification assertion functions assertVector3 throws for invalid Vector3","status":"passed","title":"assertVector3 throws for invalid Vector3","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","assertion functions"],"fullName":" Brain type verification assertion functions assertRenderMode passes for valid RenderMode","status":"passed","title":"assertRenderMode passes for valid RenderMode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","assertion functions"],"fullName":" Brain type verification assertion functions assertRenderMode throws for invalid RenderMode","status":"passed","title":"assertRenderMode throws for invalid RenderMode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","assertion functions"],"fullName":" Brain type verification assertion functions assertBrainRegion passes for valid BrainRegion","status":"passed","title":"assertBrainRegion passes for valid BrainRegion","duration":0,"failureMessages":[]},{"ancestorTitles":["","Brain type verification","assertion functions"],"fullName":" Brain type verification assertion functions assertBrainRegion throws for invalid BrainRegion","status":"passed","title":"assertBrainRegion throws for invalid BrainRegion","duration":0,"failureMessages":[]}],"startTime":1743717596903,"endTime":1743717596911,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/utils/brain/type-verification.test.ts"},{"assertionResults":[{"ancestorTitles":["","Clinical type verification","verifyRiskLevel"],"fullName":" Clinical type verification verifyRiskLevel verifies valid RiskLevel values","status":"passed","title":"verifies valid RiskLevel values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyRiskLevel"],"fullName":" Clinical type verification verifyRiskLevel fails on invalid RiskLevel values","status":"passed","title":"fails on invalid RiskLevel values","duration":2,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifySymptom"],"fullName":" Clinical type verification verifySymptom verifies valid Symptom objects","status":"passed","title":"verifies valid Symptom objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifySymptom"],"fullName":" Clinical type verification verifySymptom accepts optional properties","status":"passed","title":"accepts optional properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifySymptom"],"fullName":" Clinical type verification verifySymptom fails when required properties are missing","status":"passed","title":"fails when required properties are missing","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifySymptom"],"fullName":" Clinical type verification verifySymptom fails when properties have wrong types","status":"passed","title":"fails when properties have wrong types","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyDiagnosis"],"fullName":" Clinical type verification verifyDiagnosis verifies valid Diagnosis objects","status":"passed","title":"verifies valid Diagnosis objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyDiagnosis"],"fullName":" Clinical type verification verifyDiagnosis accepts optional properties","status":"passed","title":"accepts optional properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyDiagnosis"],"fullName":" Clinical type verification verifyDiagnosis fails when required properties are missing","status":"passed","title":"fails when required properties are missing","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyDiagnosis"],"fullName":" Clinical type verification verifyDiagnosis verifies valid string date for diagnosisDate","status":"passed","title":"verifies valid string date for diagnosisDate","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyDiagnosis"],"fullName":" Clinical type verification verifyDiagnosis fails when diagnosisDate is not a string","status":"passed","title":"fails when diagnosisDate is not a string","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyTreatment"],"fullName":" Clinical type verification verifyTreatment verifies valid Treatment objects","status":"passed","title":"verifies valid Treatment objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyTreatment"],"fullName":" Clinical type verification verifyTreatment accepts optional properties","status":"passed","title":"accepts optional properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyTreatment"],"fullName":" Clinical type verification verifyTreatment fails when required properties are missing","status":"passed","title":"fails when required properties are missing","duration":2,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyTreatmentResponse"],"fullName":" Clinical type verification verifyTreatmentResponse verifies valid TreatmentResponse objects","status":"passed","title":"verifies valid TreatmentResponse objects","duration":3,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyTreatmentResponse"],"fullName":" Clinical type verification verifyTreatmentResponse accepts optional properties","status":"passed","title":"accepts optional properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyTreatmentResponse"],"fullName":" Clinical type verification verifyTreatmentResponse fails when required properties are missing","status":"passed","title":"fails when required properties are missing","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyTreatmentResponse"],"fullName":" Clinical type verification verifyTreatmentResponse fails when date is not a Date object","status":"passed","title":"fails when date is not a Date object","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyPatient"],"fullName":" Clinical type verification verifyPatient verifies valid Patient objects","status":"passed","title":"verifies valid Patient objects","duration":6,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyPatient"],"fullName":" Clinical type verification verifyPatient accepts optional properties","status":"passed","title":"accepts optional properties","duration":20,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyPatient"],"fullName":" Clinical type verification verifyPatient verifies arrays of clinical data","status":"passed","title":"verifies arrays of clinical data","duration":6,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyPatient"],"fullName":" Clinical type verification verifyPatient fails when required properties are missing","status":"passed","title":"fails when required properties are missing","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","verifyPatient"],"fullName":" Clinical type verification verifyPatient fails when arrays contain invalid items","status":"passed","title":"fails when arrays contain invalid items","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","assertion functions"],"fullName":" Clinical type verification assertion functions assertRiskLevel passes for valid RiskLevel","status":"passed","title":"assertRiskLevel passes for valid RiskLevel","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","assertion functions"],"fullName":" Clinical type verification assertion functions assertRiskLevel throws for invalid RiskLevel","status":"passed","title":"assertRiskLevel throws for invalid RiskLevel","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","assertion functions"],"fullName":" Clinical type verification assertion functions assertSymptom passes for valid Symptom","status":"passed","title":"assertSymptom passes for valid Symptom","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","assertion functions"],"fullName":" Clinical type verification assertion functions assertSymptom throws for invalid Symptom","status":"passed","title":"assertSymptom throws for invalid Symptom","duration":0,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","assertion functions"],"fullName":" Clinical type verification assertion functions assertPatient passes for valid Patient","status":"passed","title":"assertPatient passes for valid Patient","duration":1,"failureMessages":[]},{"ancestorTitles":["","Clinical type verification","assertion functions"],"fullName":" Clinical type verification assertion functions assertPatient throws for invalid Patient","status":"passed","title":"assertPatient throws for invalid Patient","duration":7,"failureMessages":[]}],"startTime":1743717596921,"endTime":1743717596979,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/utils/clinical/type-verification.test.ts"},{"assertionResults":[{"ancestorTitles":["","Shared type verification","TypeVerificationError"],"fullName":" Shared type verification TypeVerificationError formats error message correctly","status":"passed","title":"formats error message correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseNumber"],"fullName":" Shared type verification safelyParseNumber returns number for numeric values","status":"passed","title":"returns number for numeric values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseNumber"],"fullName":" Shared type verification safelyParseNumber parses numeric strings","status":"passed","title":"parses numeric strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseNumber"],"fullName":" Shared type verification safelyParseNumber converts boolean values","status":"passed","title":"converts boolean values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseNumber"],"fullName":" Shared type verification safelyParseNumber returns fallback for non-numeric values","status":"passed","title":"returns fallback for non-numeric values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseBoolean"],"fullName":" Shared type verification safelyParseBoolean returns boolean for boolean values","status":"passed","title":"returns boolean for boolean values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseBoolean"],"fullName":" Shared type verification safelyParseBoolean parses string representations","status":"passed","title":"parses string representations","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseBoolean"],"fullName":" Shared type verification safelyParseBoolean parses numeric values","status":"passed","title":"parses numeric values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseBoolean"],"fullName":" Shared type verification safelyParseBoolean returns fallback for non-boolean values","status":"passed","title":"returns fallback for non-boolean values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseString"],"fullName":" Shared type verification safelyParseString returns string for string values","status":"passed","title":"returns string for string values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseString"],"fullName":" Shared type verification safelyParseString converts non-string values to strings","status":"passed","title":"converts non-string values to strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","safelyParseString"],"fullName":" Shared type verification safelyParseString returns fallback for null/undefined","status":"passed","title":"returns fallback for null/undefined","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyString"],"fullName":" Shared type verification verifyString verifies valid strings","status":"passed","title":"verifies valid strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyString"],"fullName":" Shared type verification verifyString fails on non-string values","status":"passed","title":"fails on non-string values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyString"],"fullName":" Shared type verification verifyString includes field name in error when provided","status":"passed","title":"includes field name in error when provided","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyNumber"],"fullName":" Shared type verification verifyNumber verifies valid numbers","status":"passed","title":"verifies valid numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyNumber"],"fullName":" Shared type verification verifyNumber fails on non-number values","status":"passed","title":"fails on non-number values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyNumber"],"fullName":" Shared type verification verifyNumber fails on NaN","status":"passed","title":"fails on NaN","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyBoolean"],"fullName":" Shared type verification verifyBoolean verifies valid booleans","status":"passed","title":"verifies valid booleans","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyBoolean"],"fullName":" Shared type verification verifyBoolean fails on non-boolean values","status":"passed","title":"fails on non-boolean values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyArray"],"fullName":" Shared type verification verifyArray verifies valid arrays","status":"passed","title":"verifies valid arrays","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyArray"],"fullName":" Shared type verification verifyArray fails on non-array values","status":"passed","title":"fails on non-array values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyArray"],"fullName":" Shared type verification verifyArray verifies array items with provided verifier","status":"passed","title":"verifies array items with provided verifier","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyArray"],"fullName":" Shared type verification verifyArray fails when any array item fails verification","status":"passed","title":"fails when any array item fails verification","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyObject"],"fullName":" Shared type verification verifyObject verifies valid objects","status":"passed","title":"verifies valid objects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","verifyObject"],"fullName":" Shared type verification verifyObject fails on non-object values","status":"passed","title":"fails on non-object values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertString passes for valid strings","status":"passed","title":"assertString passes for valid strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertString throws for non-strings","status":"passed","title":"assertString throws for non-strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertNumber passes for valid numbers","status":"passed","title":"assertNumber passes for valid numbers","duration":1,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertNumber throws for non-numbers","status":"passed","title":"assertNumber throws for non-numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertBoolean passes for valid booleans","status":"passed","title":"assertBoolean passes for valid booleans","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertBoolean throws for non-booleans","status":"passed","title":"assertBoolean throws for non-booleans","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertArray passes for valid arrays","status":"passed","title":"assertArray passes for valid arrays","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertArray throws for non-arrays","status":"passed","title":"assertArray throws for non-arrays","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertObject passes for valid objects","status":"passed","title":"assertObject passes for valid objects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Shared type verification","assertion functions"],"fullName":" Shared type verification assertion functions assertObject throws for non-objects","status":"passed","title":"assertObject throws for non-objects","duration":0,"failureMessages":[]}],"startTime":1743717596880,"endTime":1743717596887,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/utils/shared/type-verification.test.ts"},{"assertionResults":[{"ancestorTitles":["","calculateNeuralActivation"],"fullName":" calculateNeuralActivation should calculate activation based on symptoms","status":"skipped","title":"should calculate activation based on symptoms","failureMessages":[]},{"ancestorTitles":["","calculateNeuralActivation"],"fullName":" calculateNeuralActivation should calculate activation based on diagnoses","status":"skipped","title":"should calculate activation based on diagnoses","failureMessages":[]},{"ancestorTitles":["","calculateNeuralActivation"],"fullName":" calculateNeuralActivation should combine symptom and diagnosis activations","status":"skipped","title":"should combine symptom and diagnosis activations","failureMessages":[]}],"startTime":1743717596100,"endTime":1743717596100,"status":"passed","message":"","name":"/Users/ray/Desktop/GITHUB/Novamind-Backend/frontend/src/domain/models/brain/mapping/brain-mapping.test.ts"}]}